{
  "openapi": "3.1.0",
  "info": {
    "title": "Depict API",
    "version": "1.0"
  },
  "servers": [
    {
        "url": "https://api.depict.ai"
    }
  ],
  "paths": {
    "/v2/search/results": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get Results",
        "description": "Used to get search results that match the given query. Has support for filtering and\nsorting.\n\nExample response:\\n<pre>\\n{\\n   \\\"n_hits\\\": 1,\\n   \\\"displays\\\": [\\n     {\\n         \\\"product_id\\\": \\\"foobar\\\",\\n         \\\"title\\\": \\\"Foobar\\\"\\n     }\\n   ],\\n   \\\"sorts\\\": [\\n     {\\n       \\\"field\\\": \\\"_relevance\\\",\\n       \\\"order\\\": \\\"desc\\\",\\n       \\\"meta\\\": {\\n         \\\"title\\\": \\\"Relevance\\\",\\n         \\\"values\\\": [\\n           \\\"desc\\\"\\n         ],\\n         \\\"names\\\": [\\n           \\\"Relevance\\\"\\n         ]\\n       }\\n     },\\n     {\\n       \\\"field\\\": \\\"title\\\",\\n       \\\"order\\\": \\\"asc\\\",\\n       \\\"meta\\\": {\\n         \\\"title\\\": \\\"Title\\\",\\n         \\\"values\\\": [\\n           \\\"asc\\\",\\n           \\\"desc\\\"\\n         ],\\n         \\\"names\\\": [\\n           \\\"A-Z\\\",\\n           \\\"Z-A\\\"\\n         ]\\n       }\\n     }\\n   ],\\n   \\\"filters\\\": [\\n     {\\n       \\\"field\\\": \\\"sale_price\\\",\\n       \\\"op\\\": \\\"inrange\\\",\\n       \\\"data\\\": [\\n         0,\\n         2500\\n       ],\\n       \\\"meta\\\": {\\n         \\\"group_title\\\": \\\"Price\\\",\\n         \\\"type\\\": \\\"range\\\",\\n         \\\"min\\\": 0,\\n         \\\"max\\\": 2500,\\n         \\\"currency\\\": \\\"EUR\\\"\\n       },\\n       \\\"id\\\": \\\"price0\\\"\\n     },\\n     {\\n       \\\"field\\\": \\\"color_name\\\",\\n       \\\"op\\\": \\\"in\\\",\\n       \\\"meta\\\": {\\n         \\\"group_title\\\": \\\"Color\\\",\\n         \\\"type\\\": \\\"checkbox\\\",\\n         \\\"values\\\": [\\n           \\\"Blue\\\",\\n           \\\"Black\\\",\\n           \\\"Brown\\\"\\n         ]\\n       },\\n       \\\"id\\\": \\\"colors1\\\"\\n     }\\n   ],\\n   \\\"search_request_id\\\": \\\"1a278f4a-16eb-4d95-a002-88bd305493d4\\\",\\n   \\\"cursor\\\": \\\"eyJjIjogMSwgInIiOiAwfQ==\\\"\\n }\\n </pre>\\n\\n Example request body for applying a filter:\\n <pre>\\n {\\n    \\\"tenant\\\": \\\"foobar\\\"\\n    \\\"market\\\": \\\"en\\\",\\n    \\\"limit\\\": 20,\\n    \\\"query\\\": \\\"hoodie\\\",\\n    \\\"filters\\\": [\\n        {\\n            \\\"field\\\": \\\"color_name\\\",\\n            \\\"op\\\": \\\"in\\\",\\n            \\\"data\\\": [\\\"Blue\\\"]\\n        }\\n    ]\\n }\\n </pre>",
        "operationId": "Get_results_v2_search_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SearchRequest",
                "required": [
                  "tenant",
                  "market"
                ],
                "type": "object",
                "properties": {
                  "cursor": {
                    "title": "Cursor",
                    "maxLength": 500,
                    "type": "string",
                    "description": "Used for cursor-based pagination. Set it to the cursor from the last response. If not set, will return the first results.",
                    "bq_type": "STRING"
                  },
                  "limit": {
                    "title": "Limit",
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Maximum number of results per response.",
                    "bq_type": "INTEGER"
                  },
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "filters": {
                    "title": "Filters",
                    "type": "array",
                    "items": {
                      "title": "SearchFilter",
                      "required": [
                        "field",
                        "op"
                      ],
                      "type": "object",
                      "properties": {
                        "field": {
                          "title": "Field",
                          "type": "string",
                          "description": "The field to filter by.",
                          "bq_type": "STRING"
                        },
                        "op": {
                          "title": "Op",
                          "enum": [
                            "eq",
                            "neq",
                            "in",
                            "nin",
                            "leq",
                            "geq",
                            "inrange"
                          ],
                          "type": "string",
                          "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                          "bq_type": "STRING"
                        },
                        "data": {
                          "title": "Data",
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "description": "Data for the filter.",
                          "bq_type": "STRING"
                        },
                        "meta": {
                          "title": "Meta",
                          "anyOf": [
                            {
                              "title": "RangeFilterMeta",
                              "required": [
                                "min",
                                "max"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "range"
                                  ],
                                  "type": "string",
                                  "default": "range"
                                },
                                "min": {
                                  "title": "Min",
                                  "type": "number",
                                  "description": "The minimum value that can be selected in the range."
                                },
                                "max": {
                                  "title": "Max",
                                  "type": "number",
                                  "description": "The maximum value that can be selected in the range."
                                },
                                "unit": {
                                  "title": "Unit",
                                  "type": "string",
                                  "description": "The unit of the range values."
                                },
                                "currency": {
                                  "title": "Currency",
                                  "type": "string",
                                  "description": "The currency of the range values."
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "title": "ValuesFilterMeta",
                              "required": [
                                "values"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "radio",
                                    "checkbox",
                                    "checkbox-grid"
                                  ],
                                  "type": "string",
                                  "description": "Type of filter.",
                                  "default": "checkbox"
                                },
                                "values": {
                                  "title": "Values",
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "description": "Selectable values"
                                },
                                "counts": {
                                  "title": "Counts",
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "description": "Counts for values"
                                },
                                "names": {
                                  "title": "Names",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Names for values"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "title": "HierarchicalValuesFilterMeta",
                              "required": [
                                "values"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "checkbox-hierarchical"
                                  ],
                                  "type": "string",
                                  "default": "checkbox-hierarchical"
                                },
                                "values": {
                                  "title": "Values",
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Selectable hierarchical values"
                                },
                                "counts": {
                                  "title": "Counts",
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "description": "Counts for values"
                                },
                                "names": {
                                  "title": "Names",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Names for hierarchical values"
                                }
                              },
                              "additionalProperties": false
                            }
                          ],
                          "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                          "bq_exclude": true
                        },
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                          "bq_exclude": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "description": "List of filters to apply to the results.",
                    "bq_type": "JSON_DUMPS"
                  },
                  "sort": {
                    "title": "Sort",
                    "allOf": [
                      {
                        "title": "SortModel",
                        "required": [
                          "field",
                          "order"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to sort by.",
                            "bq_type": "STRING"
                          },
                          "order": {
                            "allOf": [
                              {
                                "title": "SortingOrder",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The order to sort by.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "allOf": [
                              {
                                "title": "SortMeta",
                                "required": [
                                  "title"
                                ],
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "title": "Title",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "title": "SortingOrder",
                                      "enum": [
                                        "asc",
                                        "desc"
                                      ],
                                      "type": "string",
                                      "description": "An enumeration."
                                    },
                                    "description": "Selectable values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for orders"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the sort that can be used for rendering. ",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Specifies the sorting method. By default, the results are ordered by relevance. To find the possible values for this field, query the endpoint and look at the `sorts` field.",
                    "bq_type": ""
                  },
                  "user_id": {
                    "title": "User Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "User identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the search.",
                    "bq_type": "JSON_DUMPS",
                    "bq_skip_write": true
                  },
                  "query": {
                    "title": "Query",
                    "type": "string",
                    "description": "The search query.",
                    "bq_type": "STRING"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SearchResponse",
                  "required": [
                    "n_hits",
                    "displays",
                    "search_request_id"
                  ],
                  "type": "object",
                  "properties": {
                    "n_hits": {
                      "title": "N Hits",
                      "type": "integer",
                      "description": "Total number of results for this query. Not necessarily exact.",
                      "bq_type": "INTEGER"
                    },
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "The search results.",
                      "bq_type": "JSON_DUMPS"
                    },
                    "sorts": {
                      "title": "Sorts",
                      "type": "array",
                      "items": {
                        "title": "SortModel",
                        "required": [
                          "field",
                          "order"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to sort by.",
                            "bq_type": "STRING"
                          },
                          "order": {
                            "allOf": [
                              {
                                "title": "SortingOrder",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The order to sort by.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "allOf": [
                              {
                                "title": "SortMeta",
                                "required": [
                                  "title"
                                ],
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "title": "Title",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "title": "SortingOrder",
                                      "enum": [
                                        "asc",
                                        "desc"
                                      ],
                                      "type": "string",
                                      "description": "An enumeration."
                                    },
                                    "description": "Selectable values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for orders"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the sort that can be used for rendering. ",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "Available methods for sorting the response. Any element from this list can be sent as `sort` in subsequent requests.",
                      "bq_type": ""
                    },
                    "filters": {
                      "title": "Filters",
                      "type": "array",
                      "items": {
                        "title": "SearchFilter",
                        "required": [
                          "field",
                          "op"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to filter by.",
                            "bq_type": "STRING"
                          },
                          "op": {
                            "title": "Op",
                            "enum": [
                              "eq",
                              "neq",
                              "in",
                              "nin",
                              "leq",
                              "geq",
                              "inrange"
                            ],
                            "type": "string",
                            "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                            "bq_type": "STRING"
                          },
                          "data": {
                            "title": "Data",
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "description": "Data for the filter.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "anyOf": [
                              {
                                "title": "RangeFilterMeta",
                                "required": [
                                  "min",
                                  "max"
                                ],
                                "type": "object",
                                "properties": {
                                  "group_title": {
                                    "title": "Group Title",
                                    "type": "string",
                                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                                  },
                                  "group_expanded": {
                                    "title": "Group Expanded",
                                    "type": "boolean",
                                    "description": "Whether the filter group should be expanded by default or not."
                                  },
                                  "type": {
                                    "title": "Type",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string",
                                    "default": "range"
                                  },
                                  "min": {
                                    "title": "Min",
                                    "type": "number",
                                    "description": "The minimum value that can be selected in the range."
                                  },
                                  "max": {
                                    "title": "Max",
                                    "type": "number",
                                    "description": "The maximum value that can be selected in the range."
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "type": "string",
                                    "description": "The unit of the range values."
                                  },
                                  "currency": {
                                    "title": "Currency",
                                    "type": "string",
                                    "description": "The currency of the range values."
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "title": "ValuesFilterMeta",
                                "required": [
                                  "values"
                                ],
                                "type": "object",
                                "properties": {
                                  "group_title": {
                                    "title": "Group Title",
                                    "type": "string",
                                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                                  },
                                  "group_expanded": {
                                    "title": "Group Expanded",
                                    "type": "boolean",
                                    "description": "Whether the filter group should be expanded by default or not."
                                  },
                                  "type": {
                                    "title": "Type",
                                    "enum": [
                                      "radio",
                                      "checkbox",
                                      "checkbox-grid"
                                    ],
                                    "type": "string",
                                    "description": "Type of filter.",
                                    "default": "checkbox"
                                  },
                                  "values": {
                                    "title": "Values",
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "number"
                                            }
                                          ]
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "integer"
                                            }
                                          ]
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "number"
                                            }
                                          ]
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "integer"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "description": "Selectable values"
                                  },
                                  "counts": {
                                    "title": "Counts",
                                    "type": "array",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "description": "Counts for values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for values"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "title": "HierarchicalValuesFilterMeta",
                                "required": [
                                  "values"
                                ],
                                "type": "object",
                                "properties": {
                                  "group_title": {
                                    "title": "Group Title",
                                    "type": "string",
                                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                                  },
                                  "group_expanded": {
                                    "title": "Group Expanded",
                                    "type": "boolean",
                                    "description": "Whether the filter group should be expanded by default or not."
                                  },
                                  "type": {
                                    "title": "Type",
                                    "enum": [
                                      "checkbox-hierarchical"
                                    ],
                                    "type": "string",
                                    "default": "checkbox-hierarchical"
                                  },
                                  "values": {
                                    "title": "Values",
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "enum": [
                                              "true",
                                              "false"
                                            ],
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      }
                                    },
                                    "description": "Selectable hierarchical values"
                                  },
                                  "counts": {
                                    "title": "Counts",
                                    "type": "array",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "description": "Counts for values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for hierarchical values"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                            "bq_exclude": true
                          },
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "Available filters that can be used for filtering in the subsequent request.",
                      "bq_exclude": true
                    },
                    "search_request_id": {
                      "title": "Search Request Id",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "cursor": {
                      "title": "Cursor",
                      "maxLength": 500,
                      "type": "string",
                      "description": "Cursor that can be used in the next request to get subsequent results. If this is not set, there are no more results.",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/search/suggestions": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Get Suggestions",
        "description": "Returns suggestions for a given query. Call this while the user is typing to help\\nthe user find what they're looking for. The suggestions are of two types:\\n- suggestions for search queries that are related to the current query\\n- suggestions for categories that are related to the current query\\n\\nExample response:\\n<pre>\\n{\\n  \\\"suggestions_request_id\\\": \\\"c6fa5efd-1bde-43a8-9ac4-434605f53024\\\",\\n  \\\"suggestions\\\": [\\n    {\\n      \\\"type\\\": \\\"query\\\",\\n      \\\"title\\\": \\\"red hat\\\",\\n      \\\"suggestions_result_id\\\": \\\"60c54958-8f2d-4ffd-a343-d316e79593b8\\\"\\n    },\\n    {\\n      \\\"category_id\\\": \\\"sweaters-hoodies\\\",\\n      \\\"title\\\": \\\"Sweaters & Hoodies\\\",\\n      \\\"page_url\\\": \\\"https://foobar.com/sweaters-hoodies\\\",\\n      \\\"type\\\": \\\"category\\\",\\n      \\\"suggestions_result_id\\\": \\\"b11ee4a9-0d95-4559-b1fa-76479ca3e3ea\\\"\\n    }\\n  ]\\n}\\n</pre>",
        "operationId": "Get_suggestions_v2_search_suggestions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant",
              "type": "string"
            },
            "name": "tenant",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Market",
              "type": "string"
            },
            "name": "market",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "User Id",
              "minLength": 1,
              "type": "string"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Session Id",
              "minLength": 1,
              "type": "string"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Dsid",
              "minLength": 1,
              "type": "string"
            },
            "name": "dsid",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Metadata"
            },
            "name": "metadata",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SearchSuggestionsResponse",
                  "required": [
                    "suggestions_request_id",
                    "suggestions"
                  ],
                  "type": "object",
                  "properties": {
                    "suggestions_request_id": {
                      "title": "Suggestions Request Id",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "suggestions": {
                      "title": "Suggestions",
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "QuerySuggestion",
                            "required": [
                              "title",
                              "suggestions_result_id"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "title": "Type",
                                "enum": [
                                  "query"
                                ],
                                "type": "string",
                                "default": "query",
                                "bq_type": "STRING"
                              },
                              "title": {
                                "title": "Title",
                                "type": "string",
                                "description": "Title for suggestion.",
                                "bq_type": "STRING"
                              },
                              "suggestions_result_id": {
                                "title": "Suggestions Result Id",
                                "type": "string",
                                "bq_type": "STRING"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "title": "CategorySuggestion",
                            "required": [
                              "category_id",
                              "title",
                              "page_url",
                              "filter",
                              "suggestions_result_id"
                            ],
                            "type": "object",
                            "properties": {
                              "category_id": {
                                "title": "Category Id",
                                "type": "string",
                                "description": "Unique identifier of the category."
                              },
                              "title": {
                                "title": "Title",
                                "type": "string",
                                "description": "The title of the category"
                              },
                              "page_url": {
                                "title": "Page Url",
                                "maxLength": 2083,
                                "minLength": 1,
                                "type": "string",
                                "description": "The full URL to the category page",
                                "format": "uri"
                              },
                              "query_id": {
                                "title": "Query Id",
                                "type": "string",
                                "description": "Optionally a unique query ID for the category"
                              },
                              "uri": {
                                "title": "Uri",
                                "type": "string",
                                "description": "Optionally a unique URI for the category, for example men/shoes"
                              },
                              "category_type": {
                                "allOf": [
                                  {
                                    "title": "ECategoryType",
                                    "enum": [
                                      "TAG",
                                      "CATEGORY",
                                      "TENANT_CATEGORY",
                                      "TENANT_SECONDARY_CATEGORY",
                                      "CAMPAIGN"
                                    ],
                                    "type": "string",
                                    "description": "An enumeration."
                                  }
                                ],
                                "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
                                "default": "CATEGORY"
                              },
                              "type": {
                                "title": "Type",
                                "enum": [
                                  "category"
                                ],
                                "type": "string",
                                "description": "type",
                                "default": "category",
                                "bq_type": "STRING"
                              },
                              "filter": {
                                "title": "Filter",
                                "allOf": [
                                  {
                                    "title": "SearchFilter",
                                    "required": [
                                      "field",
                                      "op"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "field": {
                                        "title": "Field",
                                        "type": "string",
                                        "description": "The field to filter by.",
                                        "bq_type": "STRING"
                                      },
                                      "op": {
                                        "title": "Op",
                                        "enum": [
                                          "eq",
                                          "neq",
                                          "in",
                                          "nin",
                                          "leq",
                                          "geq",
                                          "inrange"
                                        ],
                                        "type": "string",
                                        "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                                        "bq_type": "STRING"
                                      },
                                      "data": {
                                        "title": "Data",
                                        "anyOf": [
                                          {
                                            "enum": [
                                              "true",
                                              "false"
                                            ],
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "integer"
                                              }
                                            ]
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "integer"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "enum": [
                                                    "true",
                                                    "false"
                                                  ],
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                },
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "maxItems": 2,
                                                  "minItems": 2,
                                                  "type": "array",
                                                  "items": [
                                                    {
                                                      "type": "number"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "maxItems": 2,
                                                  "minItems": 2,
                                                  "type": "array",
                                                  "items": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "integer"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "maxItems": 2,
                                                  "minItems": 2,
                                                  "type": "array",
                                                  "items": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "maxItems": 2,
                                                  "minItems": 2,
                                                  "type": "array",
                                                  "items": [
                                                    {
                                                      "type": "number"
                                                    },
                                                    {
                                                      "type": "integer"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "anyOf": [
                                                  {
                                                    "enum": [
                                                      "true",
                                                      "false"
                                                    ],
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  },
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ],
                                        "description": "Data for the filter.",
                                        "bq_type": "STRING"
                                      },
                                      "meta": {
                                        "title": "Meta",
                                        "anyOf": [
                                          {
                                            "title": "RangeFilterMeta",
                                            "required": [
                                              "min",
                                              "max"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "group_title": {
                                                "title": "Group Title",
                                                "type": "string",
                                                "description": "Title of the group, where a group consists of all the filters that share an ID."
                                              },
                                              "group_expanded": {
                                                "title": "Group Expanded",
                                                "type": "boolean",
                                                "description": "Whether the filter group should be expanded by default or not."
                                              },
                                              "type": {
                                                "title": "Type",
                                                "enum": [
                                                  "range"
                                                ],
                                                "type": "string",
                                                "default": "range"
                                              },
                                              "min": {
                                                "title": "Min",
                                                "type": "number",
                                                "description": "The minimum value that can be selected in the range."
                                              },
                                              "max": {
                                                "title": "Max",
                                                "type": "number",
                                                "description": "The maximum value that can be selected in the range."
                                              },
                                              "unit": {
                                                "title": "Unit",
                                                "type": "string",
                                                "description": "The unit of the range values."
                                              },
                                              "currency": {
                                                "title": "Currency",
                                                "type": "string",
                                                "description": "The currency of the range values."
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          {
                                            "title": "ValuesFilterMeta",
                                            "required": [
                                              "values"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "group_title": {
                                                "title": "Group Title",
                                                "type": "string",
                                                "description": "Title of the group, where a group consists of all the filters that share an ID."
                                              },
                                              "group_expanded": {
                                                "title": "Group Expanded",
                                                "type": "boolean",
                                                "description": "Whether the filter group should be expanded by default or not."
                                              },
                                              "type": {
                                                "title": "Type",
                                                "enum": [
                                                  "radio",
                                                  "checkbox",
                                                  "checkbox-grid"
                                                ],
                                                "type": "string",
                                                "description": "Type of filter.",
                                                "default": "checkbox"
                                              },
                                              "values": {
                                                "title": "Values",
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "enum": [
                                                        "true",
                                                        "false"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    },
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "maxItems": 2,
                                                      "minItems": 2,
                                                      "type": "array",
                                                      "items": [
                                                        {
                                                          "type": "number"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "maxItems": 2,
                                                      "minItems": 2,
                                                      "type": "array",
                                                      "items": [
                                                        {
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "type": "integer"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "maxItems": 2,
                                                      "minItems": 2,
                                                      "type": "array",
                                                      "items": [
                                                        {
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "maxItems": 2,
                                                      "minItems": 2,
                                                      "type": "array",
                                                      "items": [
                                                        {
                                                          "type": "number"
                                                        },
                                                        {
                                                          "type": "integer"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "description": "Selectable values"
                                              },
                                              "counts": {
                                                "title": "Counts",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                },
                                                "description": "Counts for values"
                                              },
                                              "names": {
                                                "title": "Names",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Names for values"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          {
                                            "title": "HierarchicalValuesFilterMeta",
                                            "required": [
                                              "values"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "group_title": {
                                                "title": "Group Title",
                                                "type": "string",
                                                "description": "Title of the group, where a group consists of all the filters that share an ID."
                                              },
                                              "group_expanded": {
                                                "title": "Group Expanded",
                                                "type": "boolean",
                                                "description": "Whether the filter group should be expanded by default or not."
                                              },
                                              "type": {
                                                "title": "Type",
                                                "enum": [
                                                  "checkbox-hierarchical"
                                                ],
                                                "type": "string",
                                                "default": "checkbox-hierarchical"
                                              },
                                              "values": {
                                                "title": "Values",
                                                "type": "array",
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "anyOf": [
                                                      {
                                                        "enum": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "description": "Selectable hierarchical values"
                                              },
                                              "counts": {
                                                "title": "Counts",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                },
                                                "description": "Counts for values"
                                              },
                                              "names": {
                                                "title": "Names",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Names for hierarchical values"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        ],
                                        "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                                        "bq_exclude": true
                                      },
                                      "id": {
                                        "title": "Id",
                                        "type": "string",
                                        "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                                        "bq_exclude": true
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ],
                                "bq_exclude": true
                              },
                              "suggestions_result_id": {
                                "title": "Suggestions Result Id",
                                "type": "string",
                                "bq_type": "STRING"
                              }
                            }
                          }
                        ]
                      },
                      "description": "List of suggestions for search queries that should be shown to the user while they are typing.",
                      "bq_type": "JSON_DUMPS"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/search/related": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get Related Recommendations",
        "description": "Returns recommendations for products related to the search query. Note that this\\nendpoint takes the same request body as the `/v2/search/results` endpoint, excluding\\nthe pagination parameters. It should be called once the user has exhausted the\\nsearch results for their query and the recommended products are typically shown\\nbelow the search results.",
        "operationId": "Get_related_recommendations_v2_search_related_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "BaseSearchRequest",
                "required": [
                  "tenant",
                  "market"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "filters": {
                    "title": "Filters",
                    "type": "array",
                    "items": {
                      "title": "SearchFilter",
                      "required": [
                        "field",
                        "op"
                      ],
                      "type": "object",
                      "properties": {
                        "field": {
                          "title": "Field",
                          "type": "string",
                          "description": "The field to filter by.",
                          "bq_type": "STRING"
                        },
                        "op": {
                          "title": "Op",
                          "enum": [
                            "eq",
                            "neq",
                            "in",
                            "nin",
                            "leq",
                            "geq",
                            "inrange"
                          ],
                          "type": "string",
                          "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                          "bq_type": "STRING"
                        },
                        "data": {
                          "title": "Data",
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "description": "Data for the filter.",
                          "bq_type": "STRING"
                        },
                        "meta": {
                          "title": "Meta",
                          "anyOf": [
                            {
                              "title": "RangeFilterMeta",
                              "required": [
                                "min",
                                "max"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "range"
                                  ],
                                  "type": "string",
                                  "default": "range"
                                },
                                "min": {
                                  "title": "Min",
                                  "type": "number",
                                  "description": "The minimum value that can be selected in the range."
                                },
                                "max": {
                                  "title": "Max",
                                  "type": "number",
                                  "description": "The maximum value that can be selected in the range."
                                },
                                "unit": {
                                  "title": "Unit",
                                  "type": "string",
                                  "description": "The unit of the range values."
                                },
                                "currency": {
                                  "title": "Currency",
                                  "type": "string",
                                  "description": "The currency of the range values."
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "title": "ValuesFilterMeta",
                              "required": [
                                "values"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "radio",
                                    "checkbox",
                                    "checkbox-grid"
                                  ],
                                  "type": "string",
                                  "description": "Type of filter.",
                                  "default": "checkbox"
                                },
                                "values": {
                                  "title": "Values",
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "description": "Selectable values"
                                },
                                "counts": {
                                  "title": "Counts",
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "description": "Counts for values"
                                },
                                "names": {
                                  "title": "Names",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Names for values"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "title": "HierarchicalValuesFilterMeta",
                              "required": [
                                "values"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "checkbox-hierarchical"
                                  ],
                                  "type": "string",
                                  "default": "checkbox-hierarchical"
                                },
                                "values": {
                                  "title": "Values",
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Selectable hierarchical values"
                                },
                                "counts": {
                                  "title": "Counts",
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "description": "Counts for values"
                                },
                                "names": {
                                  "title": "Names",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Names for hierarchical values"
                                }
                              },
                              "additionalProperties": false
                            }
                          ],
                          "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                          "bq_exclude": true
                        },
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                          "bq_exclude": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "description": "List of filters to apply to the results.",
                    "bq_type": "JSON_DUMPS"
                  },
                  "sort": {
                    "title": "Sort",
                    "allOf": [
                      {
                        "title": "SortModel",
                        "required": [
                          "field",
                          "order"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to sort by.",
                            "bq_type": "STRING"
                          },
                          "order": {
                            "allOf": [
                              {
                                "title": "SortingOrder",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The order to sort by.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "allOf": [
                              {
                                "title": "SortMeta",
                                "required": [
                                  "title"
                                ],
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "title": "Title",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "title": "SortingOrder",
                                      "enum": [
                                        "asc",
                                        "desc"
                                      ],
                                      "type": "string",
                                      "description": "An enumeration."
                                    },
                                    "description": "Selectable values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for orders"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the sort that can be used for rendering. ",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Specifies the sorting method. By default, the results are ordered by relevance. To find the possible values for this field, query the endpoint and look at the `sorts` field.",
                    "bq_type": ""
                  },
                  "user_id": {
                    "title": "User Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "User identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the search.",
                    "bq_type": "JSON_DUMPS",
                    "bq_skip_write": true
                  },
                  "query": {
                    "title": "Query",
                    "type": "string",
                    "description": "The search query.",
                    "bq_type": "STRING"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RecommendResponse",
                  "required": [
                    "displays"
                  ],
                  "type": "object",
                  "properties": {
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "bq_type": "JSON_DUMPS"
                    },
                    "error": {
                      "title": "Error",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "variant": {
                      "title": "Variant",
                      "type": "integer",
                      "bq_type": "INTEGER"
                    },
                    "experiment_id": {
                      "title": "Experiment Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/product-listing": {
      "post": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Get Products",
        "description": "Provides product listing for the given category, including sorting and filtering.\\n\\nExample response:\\n<pre>\\n{\\n   \\\"n_hits\\\": 1,\\n   \\\"displays\\\": [\\n     {\\n         \\\"product_id\\\": \\\"foobar\\\",\\n         \\\"title\\\": \\\"Foobar\\\"\\n     }\\n   ],\\n   \\\"sorts\\\": [\\n     {\\n       \\\"field\\\": \\\"_relevance\\\",\\n       \\\"order\\\": \\\"desc\\\",\\n       \\\"meta\\\": {\\n         \\\"title\\\": \\\"Relevance\\\",\\n         \\\"values\\\": [\\n           \\\"desc\\\"\\n         ],\\n         \\\"names\\\": [\\n           \\\"Relevance\\\"\\n         ]\\n       }\\n     },\\n     {\\n       \\\"field\\\": \\\"title\\\",\\n       \\\"order\\\": \\\"asc\\\",\\n       \\\"meta\\\": {\\n         \\\"title\\\": \\\"Title\\\",\\n         \\\"values\\\": [\\n           \\\"asc\\\",\\n           \\\"desc\\\"\\n         ],\\n         \\\"names\\\": [\\n           \\\"A-Z\\\",\\n           \\\"Z-A\\\"\\n         ]\\n       }\\n     }\\n   ],\\n   \\\"filters\\\": [\\n     {\\n       \\\"field\\\": \\\"sale_price\\\",\\n       \\\"op\\\": \\\"inrange\\\",\\n       \\\"data\\\": [\\n         0,\\n         2500\\n       ],\\n       \\\"meta\\\": {\\n         \\\"group_title\\\": \\\"Price\\\",\\n         \\\"type\\\": \\\"range\\\",\\n         \\\"min\\\": 0,\\n         \\\"max\\\": 2500,\\n         \\\"currency\\\": \\\"EUR\\\"\\n       },\\n       \\\"id\\\": \\\"price0\\\"\\n     },\\n     {\\n       \\\"field\\\": \\\"color_name\\\",\\n       \\\"op\\\": \\\"in\\\",\\n       \\\"meta\\\": {\\n         \\\"group_title\\\": \\\"Color\\\",\\n         \\\"type\\\": \\\"checkbox\\\",\\n         \\\"values\\\": [\\n           \\\"Blue\\\",\\n           \\\"Black\\\",\\n           \\\"Brown\\\"\\n         ]\\n       },\\n       \\\"id\\\": \\\"colors1\\\"\\n     }\\n   ],\\n   \\\"product_listing_request_id\\\": \\\"1a278f4a-16eb-4d95-a002-88bd305493d4\\\",\\n   \\\"cursor\\\": \\\"eyJjIjogMSwgInIiOiAwfQ==\\\"\\n }\\n </pre>\\n\\n Example request body for applying a filter:\\n <pre>\\n {\\n    \\\"tenant\\\": \\\"foobar\\\",\\n    \\\"market\\\": \\\"en\\\",\\n    \\\"limit\\\": 20,\\n    \\\"query_id\\\": \\\"hoodies-and-sweaters\\\",\\n    \\\"filters\\\": [\\n        {\\n            \\\"field\\\": \\\"color_name\\\",\\n            \\\"op\\\": \\\"in\\\",\\n            \\\"data\\\": [\\\"Blue\\\"]\\n        }\\n    ]\\n }\\n </pre>",
        "operationId": "Get_Products_v2_product_listing_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ProductListingRequest",
                "required": [
                  "tenant",
                  "market",
                  "query_id"
                ],
                "type": "object",
                "properties": {
                  "cursor": {
                    "title": "Cursor",
                    "maxLength": 500,
                    "type": "string",
                    "description": "Used for cursor-based pagination. Set it to the cursor from the last response. If not set, will return the first results.",
                    "bq_type": "STRING"
                  },
                  "limit": {
                    "title": "Limit",
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Maximum number of results per response.",
                    "bq_type": "INTEGER"
                  },
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "filters": {
                    "title": "Filters",
                    "type": "array",
                    "items": {
                      "title": "SearchFilter",
                      "required": [
                        "field",
                        "op"
                      ],
                      "type": "object",
                      "properties": {
                        "field": {
                          "title": "Field",
                          "type": "string",
                          "description": "The field to filter by.",
                          "bq_type": "STRING"
                        },
                        "op": {
                          "title": "Op",
                          "enum": [
                            "eq",
                            "neq",
                            "in",
                            "nin",
                            "leq",
                            "geq",
                            "inrange"
                          ],
                          "type": "string",
                          "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                          "bq_type": "STRING"
                        },
                        "data": {
                          "title": "Data",
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  },
                                  {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "description": "Data for the filter.",
                          "bq_type": "STRING"
                        },
                        "meta": {
                          "title": "Meta",
                          "anyOf": [
                            {
                              "title": "RangeFilterMeta",
                              "required": [
                                "min",
                                "max"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "range"
                                  ],
                                  "type": "string",
                                  "default": "range"
                                },
                                "min": {
                                  "title": "Min",
                                  "type": "number",
                                  "description": "The minimum value that can be selected in the range."
                                },
                                "max": {
                                  "title": "Max",
                                  "type": "number",
                                  "description": "The maximum value that can be selected in the range."
                                },
                                "unit": {
                                  "title": "Unit",
                                  "type": "string",
                                  "description": "The unit of the range values."
                                },
                                "currency": {
                                  "title": "Currency",
                                  "type": "string",
                                  "description": "The currency of the range values."
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "title": "ValuesFilterMeta",
                              "required": [
                                "values"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "radio",
                                    "checkbox",
                                    "checkbox-grid"
                                  ],
                                  "type": "string",
                                  "description": "Type of filter.",
                                  "default": "checkbox"
                                },
                                "values": {
                                  "title": "Values",
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "description": "Selectable values"
                                },
                                "counts": {
                                  "title": "Counts",
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "description": "Counts for values"
                                },
                                "names": {
                                  "title": "Names",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Names for values"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "title": "HierarchicalValuesFilterMeta",
                              "required": [
                                "values"
                              ],
                              "type": "object",
                              "properties": {
                                "group_title": {
                                  "title": "Group Title",
                                  "type": "string",
                                  "description": "Title of the group, where a group consists of all the filters that share an ID."
                                },
                                "group_expanded": {
                                  "title": "Group Expanded",
                                  "type": "boolean",
                                  "description": "Whether the filter group should be expanded by default or not."
                                },
                                "type": {
                                  "title": "Type",
                                  "enum": [
                                    "checkbox-hierarchical"
                                  ],
                                  "type": "string",
                                  "default": "checkbox-hierarchical"
                                },
                                "values": {
                                  "title": "Values",
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "description": "Selectable hierarchical values"
                                },
                                "counts": {
                                  "title": "Counts",
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "description": "Counts for values"
                                },
                                "names": {
                                  "title": "Names",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Names for hierarchical values"
                                }
                              },
                              "additionalProperties": false
                            }
                          ],
                          "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                          "bq_exclude": true
                        },
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                          "bq_exclude": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "description": "List of filters to apply to the results.",
                    "bq_type": "JSON_DUMPS"
                  },
                  "sort": {
                    "title": "Sort",
                    "allOf": [
                      {
                        "title": "SortModel",
                        "required": [
                          "field",
                          "order"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to sort by.",
                            "bq_type": "STRING"
                          },
                          "order": {
                            "allOf": [
                              {
                                "title": "SortingOrder",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The order to sort by.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "allOf": [
                              {
                                "title": "SortMeta",
                                "required": [
                                  "title"
                                ],
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "title": "Title",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "title": "SortingOrder",
                                      "enum": [
                                        "asc",
                                        "desc"
                                      ],
                                      "type": "string",
                                      "description": "An enumeration."
                                    },
                                    "description": "Selectable values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for orders"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the sort that can be used for rendering. ",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Specifies the sorting method. By default, the results are ordered by relevance. To find the possible values for this field, query the endpoint and look at the `sorts` field.",
                    "bq_type": ""
                  },
                  "user_id": {
                    "title": "User Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "User identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the search.",
                    "bq_type": "JSON_DUMPS",
                    "bq_skip_write": true
                  },
                  "query_id": {
                    "title": "Query Id",
                    "minLength": 1,
                    "type": "string",
                    "description": "ID of the page to get products for. This is typically the slug, for example `hoodies-and-sweaters`.",
                    "bq_type": "STRING"
                  },
                  "type": {
                    "allOf": [
                      {
                        "title": "ProductListingType",
                        "enum": [
                          "category",
                          "collection"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ],
                    "description": "The type of query. If not set the endpoint will look up query id in the following type order: collections, categories.",
                    "bq_type": "STRING"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProductListingResponse",
                  "required": [
                    "n_hits",
                    "displays",
                    "product_listing_request_id"
                  ],
                  "type": "object",
                  "properties": {
                    "n_hits": {
                      "title": "N Hits",
                      "type": "integer",
                      "description": "Total number of results for this query. Not necessarily exact.",
                      "bq_type": "INTEGER"
                    },
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "The products to be shown on the product listing page.",
                      "bq_type": "JSON_DUMPS"
                    },
                    "sorts": {
                      "title": "Sorts",
                      "type": "array",
                      "items": {
                        "title": "SortModel",
                        "required": [
                          "field",
                          "order"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to sort by.",
                            "bq_type": "STRING"
                          },
                          "order": {
                            "allOf": [
                              {
                                "title": "SortingOrder",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The order to sort by.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "allOf": [
                              {
                                "title": "SortMeta",
                                "required": [
                                  "title"
                                ],
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "title": "Title",
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "title": "SortingOrder",
                                      "enum": [
                                        "asc",
                                        "desc"
                                      ],
                                      "type": "string",
                                      "description": "An enumeration."
                                    },
                                    "description": "Selectable values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for orders"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the sort that can be used for rendering. ",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "Available methods for sorting the response. Any element from this list can be sent as `sort` in subsequent requests.",
                      "bq_type": ""
                    },
                    "filters": {
                      "title": "Filters",
                      "type": "array",
                      "items": {
                        "title": "SearchFilter",
                        "required": [
                          "field",
                          "op"
                        ],
                        "type": "object",
                        "properties": {
                          "field": {
                            "title": "Field",
                            "type": "string",
                            "description": "The field to filter by.",
                            "bq_type": "STRING"
                          },
                          "op": {
                            "title": "Op",
                            "enum": [
                              "eq",
                              "neq",
                              "in",
                              "nin",
                              "leq",
                              "geq",
                              "inrange"
                            ],
                            "type": "string",
                            "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                            "bq_type": "STRING"
                          },
                          "data": {
                            "title": "Data",
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    },
                                    {
                                      "maxItems": 2,
                                      "minItems": 2,
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "description": "Data for the filter.",
                            "bq_type": "STRING"
                          },
                          "meta": {
                            "title": "Meta",
                            "anyOf": [
                              {
                                "title": "RangeFilterMeta",
                                "required": [
                                  "min",
                                  "max"
                                ],
                                "type": "object",
                                "properties": {
                                  "group_title": {
                                    "title": "Group Title",
                                    "type": "string",
                                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                                  },
                                  "group_expanded": {
                                    "title": "Group Expanded",
                                    "type": "boolean",
                                    "description": "Whether the filter group should be expanded by default or not."
                                  },
                                  "type": {
                                    "title": "Type",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string",
                                    "default": "range"
                                  },
                                  "min": {
                                    "title": "Min",
                                    "type": "number",
                                    "description": "The minimum value that can be selected in the range."
                                  },
                                  "max": {
                                    "title": "Max",
                                    "type": "number",
                                    "description": "The maximum value that can be selected in the range."
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "type": "string",
                                    "description": "The unit of the range values."
                                  },
                                  "currency": {
                                    "title": "Currency",
                                    "type": "string",
                                    "description": "The currency of the range values."
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "title": "ValuesFilterMeta",
                                "required": [
                                  "values"
                                ],
                                "type": "object",
                                "properties": {
                                  "group_title": {
                                    "title": "Group Title",
                                    "type": "string",
                                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                                  },
                                  "group_expanded": {
                                    "title": "Group Expanded",
                                    "type": "boolean",
                                    "description": "Whether the filter group should be expanded by default or not."
                                  },
                                  "type": {
                                    "title": "Type",
                                    "enum": [
                                      "radio",
                                      "checkbox",
                                      "checkbox-grid"
                                    ],
                                    "type": "string",
                                    "description": "Type of filter.",
                                    "default": "checkbox"
                                  },
                                  "values": {
                                    "title": "Values",
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "number"
                                            }
                                          ]
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "integer"
                                            }
                                          ]
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "number"
                                            }
                                          ]
                                        },
                                        {
                                          "maxItems": 2,
                                          "minItems": 2,
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "integer"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "description": "Selectable values"
                                  },
                                  "counts": {
                                    "title": "Counts",
                                    "type": "array",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "description": "Counts for values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for values"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "title": "HierarchicalValuesFilterMeta",
                                "required": [
                                  "values"
                                ],
                                "type": "object",
                                "properties": {
                                  "group_title": {
                                    "title": "Group Title",
                                    "type": "string",
                                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                                  },
                                  "group_expanded": {
                                    "title": "Group Expanded",
                                    "type": "boolean",
                                    "description": "Whether the filter group should be expanded by default or not."
                                  },
                                  "type": {
                                    "title": "Type",
                                    "enum": [
                                      "checkbox-hierarchical"
                                    ],
                                    "type": "string",
                                    "default": "checkbox-hierarchical"
                                  },
                                  "values": {
                                    "title": "Values",
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "enum": [
                                              "true",
                                              "false"
                                            ],
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      }
                                    },
                                    "description": "Selectable hierarchical values"
                                  },
                                  "counts": {
                                    "title": "Counts",
                                    "type": "array",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "description": "Counts for values"
                                  },
                                  "names": {
                                    "title": "Names",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Names for hierarchical values"
                                  }
                                },
                                "additionalProperties": false
                              }
                            ],
                            "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                            "bq_exclude": true
                          },
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                            "bq_exclude": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "Available filters that can be used for filtering in the subsequent request.",
                      "bq_exclude": true
                    },
                    "product_listing_request_id": {
                      "title": "Product Listing Request Id",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "breadcrumb": {
                      "title": "Breadcrumb",
                      "type": "array",
                      "items": {
                        "title": "BaseCategoryDisplay",
                        "required": [
                          "category_id",
                          "title",
                          "page_url"
                        ],
                        "type": "object",
                        "properties": {
                          "category_id": {
                            "title": "Category Id",
                            "type": "string",
                            "description": "Unique identifier of the category."
                          },
                          "title": {
                            "title": "Title",
                            "type": "string",
                            "description": "The title of the category"
                          },
                          "page_url": {
                            "title": "Page Url",
                            "maxLength": 2083,
                            "minLength": 1,
                            "type": "string",
                            "description": "The full URL to the category page",
                            "format": "uri"
                          },
                          "query_id": {
                            "title": "Query Id",
                            "type": "string",
                            "description": "Optionally a unique query ID for the category"
                          },
                          "uri": {
                            "title": "Uri",
                            "type": "string",
                            "description": "Optionally a unique URI for the category, for example men/shoes"
                          },
                          "category_type": {
                            "allOf": [
                              {
                                "title": "ECategoryType",
                                "enum": [
                                  "TAG",
                                  "CATEGORY",
                                  "TENANT_CATEGORY",
                                  "TENANT_SECONDARY_CATEGORY",
                                  "CAMPAIGN"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
                            "default": "CATEGORY"
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "Breadcrumb for the current page. Ordered from less to more specific, where the last element is the current page.",
                      "bq_exclude": true
                    },
                    "quick_links": {
                      "title": "Quick Links",
                      "type": "array",
                      "items": {
                        "title": "BaseCategoryDisplay",
                        "required": [
                          "category_id",
                          "title",
                          "page_url"
                        ],
                        "type": "object",
                        "properties": {
                          "category_id": {
                            "title": "Category Id",
                            "type": "string",
                            "description": "Unique identifier of the category."
                          },
                          "title": {
                            "title": "Title",
                            "type": "string",
                            "description": "The title of the category"
                          },
                          "page_url": {
                            "title": "Page Url",
                            "maxLength": 2083,
                            "minLength": 1,
                            "type": "string",
                            "description": "The full URL to the category page",
                            "format": "uri"
                          },
                          "query_id": {
                            "title": "Query Id",
                            "type": "string",
                            "description": "Optionally a unique query ID for the category"
                          },
                          "uri": {
                            "title": "Uri",
                            "type": "string",
                            "description": "Optionally a unique URI for the category, for example men/shoes"
                          },
                          "category_type": {
                            "allOf": [
                              {
                                "title": "ECategoryType",
                                "enum": [
                                  "TAG",
                                  "CATEGORY",
                                  "TENANT_CATEGORY",
                                  "TENANT_SECONDARY_CATEGORY",
                                  "CAMPAIGN"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
                            "default": "CATEGORY"
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "List of pages that can be used as quick links. Will return child pages if they exist, otherwise sibling pages.",
                      "bq_exclude": true
                    },
                    "cursor": {
                      "title": "Cursor",
                      "maxLength": 500,
                      "type": "string",
                      "description": "Cursor that can be used in the next request to get subsequent results. If this is not set, there are no more results.",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/recommend/products/general": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Recommend For User",
        "description": "Returns an object with an array of recommendation displays.\\n\\nEach display will contain a recommendation_id (which is also present as a URL parameter in `display.page_url`).\\nThe recommendation_id should be sent to the `create-events` endpoint if the user interacts with the recommendation.\\nThis is typically achieved by storing the recommendation as a data attribute on the HTML element containing the recommendation.\\n\\nExample response:\\n<pre>\\n{\\n    \\\"displays\\\": [{\\n        \\\"title\\\": \\\"Mechanical Keyboard\\\",\\n        \\\"price\\\": \\\"100.00\\\",\\n        \\\"image_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.jpeg\\\",\\n        \\\"page_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n        \\\"product_id\\\": \\\"awesome_mechanical_keyboard\\\",\\n        \\\"recommendation_id\\\": \\\"827ada29-92e7-4642-8805-8b7105a9c8a5\\\"\\n    }]\\n}\\n</pre>",
        "operationId": "Recommend_for_User_v2_recommend_products_general_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Referer",
              "type": "string"
            },
            "name": "referer",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "GeneralRecommendRequest",
                "required": [
                  "tenant",
                  "market",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "description": "Identifier associated with the API integration",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "description": "Market identifier",
                    "bq_type": "STRING"
                  },
                  "type": {
                    "title": "Type",
                    "type": "string",
                    "description": "Type of the recommendation, e.g. `cross_sell`",
                    "bq_type": "STRING"
                  },
                  "user_id": {
                    "title": "User Id",
                    "type": "string",
                    "description": "Customer identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "document_referrer": {
                    "title": "Document Referrer",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the recommendation system",
                    "bq_type": "JSON_DUMPS"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RecommendResponse",
                  "required": [
                    "displays"
                  ],
                  "type": "object",
                  "properties": {
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "bq_type": "JSON_DUMPS"
                    },
                    "error": {
                      "title": "Error",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "variant": {
                      "title": "Variant",
                      "type": "integer",
                      "bq_type": "INTEGER"
                    },
                    "experiment_id": {
                      "title": "Experiment Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/recommend/products/product": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Recommend For Product And User",
        "description": "Returns an object with an array of recommendation displays.\\n\\nEach display will contain a recommendation_id (which is also present as a URL parameter in `display.page_url`).\\nThe recommendation_id should be sent to the `create-events` endpoint if the user interacts with the recommendation.\\nThis is typically achieved by storing the recommendation as a data attribute on the HTML element containing the recommendation.\\n\\nExample response:\\n<pre>\\n{\\n    \\\"displays\\\": [{\\n        \\\"title\\\": \\\"Mechanical Keyboard\\\",\\n        \\\"price\\\": \\\"100.00\\\",\\n        \\\"image_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.jpeg\\\",\\n        \\\"page_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n        \\\"product_id\\\": \\\"awesome_mechanical_keyboard\\\",\\n        \\\"recommendation_id\\\": \\\"827ada29-92e7-4642-8805-8b7105a9c8a5\\\"\\n    }]\\n}\\n</pre>",
        "operationId": "Recommend_for_Product_and_User_v2_recommend_products_product_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Referer",
              "type": "string"
            },
            "name": "referer",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "RecommendRequest",
                "required": [
                  "tenant",
                  "market",
                  "type",
                  "product_id"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "description": "Identifier associated with the API integration",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "description": "Market identifier",
                    "bq_type": "STRING"
                  },
                  "type": {
                    "title": "Type",
                    "type": "string",
                    "description": "Type of the recommendation, e.g. `cross_sell`",
                    "bq_type": "STRING"
                  },
                  "user_id": {
                    "title": "User Id",
                    "type": "string",
                    "description": "Customer identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "document_referrer": {
                    "title": "Document Referrer",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the recommendation system",
                    "bq_type": "JSON_DUMPS"
                  },
                  "product_id": {
                    "title": "Product Id",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "bq_type": "STRING"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RecommendResponse",
                  "required": [
                    "displays"
                  ],
                  "type": "object",
                  "properties": {
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "bq_type": "JSON_DUMPS"
                    },
                    "error": {
                      "title": "Error",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "variant": {
                      "title": "Variant",
                      "type": "integer",
                      "bq_type": "INTEGER"
                    },
                    "experiment_id": {
                      "title": "Experiment Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/recommend/products/category": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Recommend For Category And User",
        "description": "Returns an object with an array of recommendation displays.\\n\\nEach display will contain a recommendation_id (which is also present as a URL parameter in `display.page_url`).\\nThe recommendation_id should be sent to the `create-events` endpoint if the user interacts with the recommendation.\\nThis is typically achieved by storing the recommendation as a data attribute on the HTML element containing the recommendation.\\n\\nExample response:\\n\\n<pre>\\n{\\n    \\\"displays\\\": [{\\n        \\\"title\\\": \\\"Mechanical Keyboard\\\",\\n        \\\"price\\\": \\\"100.00\\\",\\n        \\\"image_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.jpeg\\\",\\n        \\\"page_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n        \\\"product_id\\\": \\\"awesome_mechanical_keyboard\\\",\\n        \\\"recommendation_id\\\": \\\"827ada29-92e7-4642-8805-8b7105a9c8a5\\\"\\n    }]\\n}\\n</pre>",
        "operationId": "Recommend_for_Category_and_User_v2_recommend_products_category_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Referer",
              "type": "string"
            },
            "name": "referer",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CategoryRecommendRequest",
                "required": [
                  "tenant",
                  "market",
                  "type",
                  "category_id"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "description": "Identifier associated with the API integration",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "description": "Market identifier",
                    "bq_type": "STRING"
                  },
                  "type": {
                    "title": "Type",
                    "type": "string",
                    "description": "Type of the recommendation, e.g. `cross_sell`",
                    "bq_type": "STRING"
                  },
                  "user_id": {
                    "title": "User Id",
                    "type": "string",
                    "description": "Customer identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "document_referrer": {
                    "title": "Document Referrer",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the recommendation system",
                    "bq_type": "JSON_DUMPS"
                  },
                  "category_id": {
                    "title": "Category Id",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "bq_type": "STRING"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RecommendResponse",
                  "required": [
                    "displays"
                  ],
                  "type": "object",
                  "properties": {
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "bq_type": "JSON_DUMPS"
                    },
                    "error": {
                      "title": "Error",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "variant": {
                      "title": "Variant",
                      "type": "integer",
                      "bq_type": "INTEGER"
                    },
                    "experiment_id": {
                      "title": "Experiment Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/recommend/products/products": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Recommend For Products And User",
        "description": "Returns an object with an array of recommendation displays.\\n\\nEach display will contain a recommendation_id (which is also present as a URL parameter in `display.page_url`).\\nThe recommendation_id should be sent to the `create-events` endpoint if the user interacts with the recommendation.\\nThis is typically achieved by storing the recommendation as a data attribute on the HTML element containing the recommendation.\\n\\nExample response:\\n<pre>\\n{\\n    \\\"displays\\\": [{\\n        \\\"title\\\": \\\"Mechanical Keyboard\\\",\\n        \\\"price\\\": \\\"100.00\\\",\\n        \\\"image_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.jpeg\\\",\\n        \\\"page_url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n        \\\"product_id\\\": \\\"awesome_mechanical_keyboard\\\",\\n        \\\"recommendation_id\\\": \\\"827ada29-92e7-4642-8805-8b7105a9c8a5\\\"\\n    }]\\n}\\n</pre>",
        "operationId": "Recommend_for_Products_and_User_v2_recommend_products_products_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Referer",
              "type": "string"
            },
            "name": "referer",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "RecommendForManyRequest",
                "required": [
                  "tenant",
                  "market",
                  "type",
                  "product_ids"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "type": "string",
                    "description": "Identifier associated with the API integration",
                    "bq_type": "STRING"
                  },
                  "market": {
                    "title": "Market",
                    "type": "string",
                    "description": "Market identifier",
                    "bq_type": "STRING"
                  },
                  "type": {
                    "title": "Type",
                    "type": "string",
                    "description": "Type of the recommendation, e.g. `cross_sell`",
                    "bq_type": "STRING"
                  },
                  "user_id": {
                    "title": "User Id",
                    "type": "string",
                    "description": "Customer identifier",
                    "bq_type": "STRING"
                  },
                  "session_id": {
                    "title": "Session Id",
                    "type": "string",
                    "description": "Session identifier",
                    "bq_type": "STRING"
                  },
                  "dsid": {
                    "title": "Dsid",
                    "minLength": 1,
                    "type": "string",
                    "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                    "bq_type": "STRING"
                  },
                  "document_referrer": {
                    "title": "Document Referrer",
                    "type": "string",
                    "bq_type": "STRING"
                  },
                  "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that can be used to modify the behaviour of the recommendation system",
                    "bq_type": "JSON_DUMPS"
                  },
                  "product_ids": {
                    "title": "Product Ids",
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "bq_type": "STRING"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RecommendResponse",
                  "required": [
                    "displays"
                  ],
                  "type": "object",
                  "properties": {
                    "displays": {
                      "title": "Displays",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "bq_type": "JSON_DUMPS"
                    },
                    "error": {
                      "title": "Error",
                      "type": "string",
                      "bq_type": "STRING"
                    },
                    "variant": {
                      "title": "Variant",
                      "type": "integer",
                      "bq_type": "INTEGER"
                    },
                    "experiment_id": {
                      "title": "Experiment Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/create-events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create Events",
        "description": "There are 5 types of events:\\n- page_view\\n- click\\n- add_to_cart\\n- purchase\\n- element_visible\\n\\nFor most integrations, we recommend sending `add_to_cart` events. Note that most of the event fields are not mandatory.\\nSee more details about each event field below.\\n\\nFor events of type `click` the `recommendation_id` for the clicked recommendation (which is returned from the `/recommend` endpoint)\\nshould be set if available.\\n\\n\\nExamples requests:\\n\\n<pre>\\n[{\\n    \\\"tenant\\\": \\\"my_store\\\",\\n    \\\"market\\\": \\\"us\\\",\\n    <mark>\\\"type\\\": \\\"page_view\\\",</mark>\\n    \\\"user_id\\\": \\\"GA1.2.00000000.0000000000\\\",\\n    \\\"url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n    \\\"product_id\\\": \\\"BLA-KEY-XXX\\\",\\n    \\\"entity_identifiers\\\": {\\n        \\\"sku\\\": \\\"31415\\\"\\n    },\\n    \\\"entity_price\\\": \\\"100$\\\",\\n    \\\"document_width\\\": \\\"300\\\"\\n}]\\n</pre>\\n<pre>\\n[{\\n    \\\"tenant\\\": \\\"my_store\\\",\\n    \\\"market\\\": \\\"us\\\",\\n    <mark>\\\"type\\\": \\\"click\\\",</mark>\\n    \\\"user_id\\\": \\\"ga1.2.00000000.0000000000\\\",\\n    \\\"url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n    \\\"product_id\\\": \\\"bla-key-xxx\\\",\\n    \\\"entity_identifiers\\\": {\\n        \\\"sku\\\": \\\"31415\\\"\\n    },\\n    \\\"entity_price\\\": \\\"100$\\\",\\n    \\\"document_width\\\": \\\"300\\\",\\n    <mark>\\\"recommendation_id\\\": \\\"827ada29-92e7-4642-8805-8b7105a9c8a5\\\",</mark>\\n    <mark>\\\"click_location\\\": \\\"landing_page_recommendation_1\\\"</mark>\\n}]\\n</pre>\\n\\n\\n<details>\\n  <summary>View more examples</summary>\\n<pre>\\n[{\\n    \\\"tenant\\\": \\\"my_store\\\",\\n    \\\"market\\\": \\\"us\\\",\\n    <mark>\\\"type\\\": \\\"add_to_cart\\\",</mark>\\n    \\\"user_id\\\": \\\"GA1.2.00000000.0000000000\\\",\\n    \\\"url\\\": \\\"https://my_store.com/awesome_mechanical_keyboard.html\\\",\\n    \\\"product_id\\\": \\\"BLA-KEY-XXX\\\",\\n    \\\"entity_identifiers\\\": {\\n        \\\"sku\\\": \\\"31415\\\"\\n    },\\n    \\\"entity_price\\\": \\\"100$\\\",\\n    \\\"document_width\\\": \\\"300\\\"\\n}]\\n</pre>\\n<pre>\\n[{\\n    \\\"tenant\\\": \\\"my_store\\\",\\n    \\\"market\\\": \\\"us\\\",\\n    <mark>\\\"type\\\": \\\"purchase\\\",</mark>\\n    \\\"user_id\\\": \\\"GA1.2.00000000.0000000000\\\",\\n    \\\"url\\\": \\\"https://my_store.com/checkout.html\\\",\\n    \\\"product_id\\\": \\\"BLA-KEY-XXX\\\",\\n    \\\"entity_identifiers\\\": {\\n        \\\"sku\\\": \\\"31415\\\"\\n    },\\n    \\\"entity_price\\\": \\\"100$\\\",\\n    \\\"document_width\\\": \\\"300\\\"\\n}]\\n</pre>\\n<pre>\\n[{\\n    \\\"tenant\\\": \\\"my_store\\\",\\n    \\\"market\\\": \\\"us\\\",\\n    <mark>\\\"type\\\": \\\"element_visible\\\",</mark>\\n    \\\"user_id\\\": \\\"GA1.2.00000000.0000000000\\\",\\n    \\\"url\\\": \\\"https://my_store.com/checkout.html\\\",\\n    \\\"product_id\\\": \\\"BLA-KEY-XXX\\\",\\n    \\\"entity_identifiers\\\": {\\n        \\\"sku\\\": \\\"31415\\\"\\n    },\\n    \\\"entity_price\\\": \\\"100$\\\",\\n    \\\"document_width\\\": \\\"300\\\",\\n    <mark>\\\"recommendation_id\\\": \\\"827ada29-92e7-4642-8805-8b7105a9c8a5\\\"</mark>\\n}]\\n</pre>\\n</details>",
        "operationId": "create_events_create_events_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Referer",
              "type": "string"
            },
            "name": "referer",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "User-Agent",
              "type": "string"
            },
            "name": "user-agent",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Forwarded-For",
              "type": "string"
            },
            "name": "x-forwarded-for",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Forwarded-Host",
              "type": "string"
            },
            "name": "x-forwarded-host",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Request",
                "type": "array",
                "items": {
                  "title": "Event",
                  "required": [
                    "tenant",
                    "market",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "tenant": {
                      "title": "Tenant",
                      "type": "string",
                      "description": "Identifier associated with the API integration",
                      "bq_type": "STRING"
                    },
                    "market": {
                      "title": "Market",
                      "type": "string",
                      "description": "Market identifier",
                      "bq_type": "STRING"
                    },
                    "deduplication_id": {
                      "title": "Deduplication Id",
                      "type": "string",
                      "description": "If retrying creating events, this should be set to a unique value common across all requests with the same event",
                      "bq_type": "STRING"
                    },
                    "type": {
                      "allOf": [
                        {
                          "title": "EEventType",
                          "enum": [
                            "page_view",
                            "click",
                            "add_to_cart",
                            "purchase",
                            "element_visible",
                            "ws_click",
                            "recommendations_inserted"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "Type of event",
                      "bq_type": "STRING"
                    },
                    "user_id": {
                      "title": "User Id",
                      "type": "string",
                      "description": "Customer identifier",
                      "bq_type": "STRING"
                    },
                    "session_id": {
                      "title": "Session Id",
                      "type": "string",
                      "description": "Session identifier",
                      "bq_type": "STRING"
                    },
                    "dsid": {
                      "title": "Dsid",
                      "minLength": 1,
                      "type": "string",
                      "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
                      "bq_type": "STRING"
                    },
                    "ab_test_group": {
                      "title": "Ab Test Group",
                      "type": "string",
                      "description": "A/B test group identifier. Not required.",
                      "bq_type": "STRING"
                    },
                    "product_id": {
                      "title": "Product Id",
                      "type": "string",
                      "description": "Main product identifier",
                      "bq_type": "STRING"
                    },
                    "variant_ids": {
                      "title": "Variant Ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Identifiers of variants for this product. Not required.",
                      "bq_type": "STRING"
                    },
                    "entity_identifiers": {
                      "title": "Entity Identifiers",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Key-value object containing additional identifiers for the product",
                      "bq_type": "JSON_DUMPS"
                    },
                    "url": {
                      "title": "Url",
                      "type": "string",
                      "description": "The value of `document.location.href` in the user's browser",
                      "bq_type": "STRING"
                    },
                    "entity_price": {
                      "title": "Entity Price",
                      "type": "string",
                      "description": "Current price of product. Not required.",
                      "bq_type": "STRING"
                    },
                    "currency": {
                      "title": "Currency",
                      "type": "string",
                      "description": "Currency of product (ISO 4217 code). Not required.",
                      "bq_type": "STRING"
                    },
                    "document_referrer": {
                      "title": "Document Referrer",
                      "type": "string",
                      "description": "The value of `document.referrer` in the user's browser",
                      "bq_type": "STRING"
                    },
                    "document_width": {
                      "title": "Document Width",
                      "type": "string",
                      "description": "The value of `document.width` in the user's browser",
                      "bq_type": "STRING"
                    },
                    "attribution_id": {
                      "title": "Attribution Id",
                      "type": "string",
                      "description": "Keyword specifying what led to this event. Not required.",
                      "bq_type": "STRING"
                    },
                    "recommendation_id": {
                      "title": "Recommendation Id",
                      "type": "string",
                      "description": "Unique identifier returned from the `/recommend` endpoint",
                      "bq_type": "STRING"
                    },
                    "search_result_id": {
                      "title": "Search Result Id",
                      "type": "string",
                      "description": "Unique identifier of the search result.",
                      "bq_type": "STRING"
                    },
                    "product_listing_result_id": {
                      "title": "Product Listing Result Id",
                      "type": "string",
                      "description": "Unique identifier of the product listing result.",
                      "bq_type": "STRING"
                    },
                    "click_location": {
                      "title": "Click Location",
                      "type": "string",
                      "description": "Keyword specifying what element was clicked. Not required.",
                      "bq_type": "STRING"
                    },
                    "page_url": {
                      "title": "Page Url",
                      "type": "string",
                      "description": "The URL of the product page visited",
                      "bq_type": "STRING"
                    },
                    "recommendation_type": {
                      "title": "Recommendation Type",
                      "type": "string",
                      "description": "The type of recommendations inserted",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/track": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Track V2",
        "operationId": "track_v2_v2_track_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "TrackV2Request",
                "required": [
                  "tenant",
                  "market",
                  "events"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "minLength": 1,
                    "type": "string",
                    "description": "Identifier associated with the API integration"
                  },
                  "market": {
                    "title": "Market",
                    "minLength": 1,
                    "type": "string",
                    "description": "Market identifier"
                  },
                  "events": {
                    "title": "Events",
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "title": "UserTransactionMappingEvent",
                          "required": [
                            "transaction_id"
                          ],
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "User Id. Persistent between devices, typically on a logged in user.",
                              "bq_type": "STRING"
                            },
                            "session_id": {
                              "title": "Session Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                              "bq_type": "STRING"
                            },
                            "dsid": {
                              "title": "Dsid",
                              "minLength": 1,
                              "type": "string",
                              "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                              "bq_type": "STRING"
                            },
                            "transaction_id": {
                              "title": "Transaction Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Unique identifier for the transaction.",
                              "bq_type": "STRING"
                            },
                            "event_type": {
                              "title": "Event Type",
                              "enum": [
                                "transaction_mapping"
                              ],
                              "type": "string",
                              "description": "The type identifier for this event: transaction_mapping.",
                              "bq_exclude": true
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "title": "PurchaseEvent",
                          "required": [
                            "transaction_id",
                            "currency",
                            "products"
                          ],
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "User Id. Persistent between devices, typically on a logged in user.",
                              "bq_type": "STRING"
                            },
                            "session_id": {
                              "title": "Session Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                              "bq_type": "STRING"
                            },
                            "dsid": {
                              "title": "Dsid",
                              "minLength": 1,
                              "type": "string",
                              "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                              "bq_type": "STRING"
                            },
                            "transaction_id": {
                              "title": "Transaction Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Unique identifier for the transaction.",
                              "bq_type": "STRING"
                            },
                            "event_type": {
                              "title": "Event Type",
                              "enum": [
                                "purchase"
                              ],
                              "type": "string",
                              "description": "The type identifier for this event: purchase.",
                              "bq_exclude": true
                            },
                            "currency": {
                              "title": "Currency",
                              "pattern": "^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$",
                              "type": "string",
                              "description": "Currency the purchase was paid in",
                              "bq_type": "STRING"
                            },
                            "products": {
                              "title": "Products",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "title": "PurchasedProduct",
                                "required": [
                                  "sku",
                                  "price",
                                  "quantity"
                                ],
                                "type": "object",
                                "properties": {
                                  "sku": {
                                    "title": "Sku",
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Stock keeping unit, a distinct item for sale. If you are using Google Analytics, it should be the same id used for products there.",
                                    "bq_type": "STRING"
                                  },
                                  "price": {
                                    "title": "Price",
                                    "minimum": 0,
                                    "type": "number",
                                    "description": "Price per unit. If there are discounts because of quantity, the unit price should be adjusted accordingly.",
                                    "bq_type": "NUMERIC"
                                  },
                                  "quantity": {
                                    "title": "Quantity",
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The number of times the product was purchased.",
                                    "bq_type": "INTEGER"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "description": "All the products purchased in this transaction",
                              "bq_type": ""
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "title": "ProductUnavailableEvent",
                          "required": [
                            "event_type",
                            "product_id",
                            "unavailability_type"
                          ],
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "User Id. Persistent between devices, typically on a logged in user.",
                              "bq_type": "STRING"
                            },
                            "session_id": {
                              "title": "Session Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                              "bq_type": "STRING"
                            },
                            "dsid": {
                              "title": "Dsid",
                              "minLength": 1,
                              "type": "string",
                              "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                              "bq_type": "STRING"
                            },
                            "event_type": {
                              "title": "Event Type",
                              "enum": [
                                "product_unavailable"
                              ],
                              "type": "string",
                              "description": "The type identifier for this event: product_unavailable.",
                              "bq_exclude": true
                            },
                            "product_id": {
                              "title": "Product Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Main product identifier",
                              "bq_type": "STRING"
                            },
                            "unavailability_type": {
                              "allOf": [
                                {
                                  "title": "EUnavailabilityType",
                                  "enum": [
                                    "out_of_stock",
                                    "missing"
                                  ],
                                  "type": "string",
                                  "description": "An enumeration."
                                }
                              ],
                              "description": "Reason the product isn't available for purchase",
                              "bq_type": "STRING"
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v2/create-events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create Events V2",
        "operationId": "create_events_v2_v2_create_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "TrackV2Request",
                "required": [
                  "tenant",
                  "market",
                  "events"
                ],
                "type": "object",
                "properties": {
                  "tenant": {
                    "title": "Tenant",
                    "minLength": 1,
                    "type": "string",
                    "description": "Identifier associated with the API integration"
                  },
                  "market": {
                    "title": "Market",
                    "minLength": 1,
                    "type": "string",
                    "description": "Market identifier"
                  },
                  "events": {
                    "title": "Events",
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "title": "UserTransactionMappingEvent",
                          "required": [
                            "transaction_id"
                          ],
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "User Id. Persistent between devices, typically on a logged in user.",
                              "bq_type": "STRING"
                            },
                            "session_id": {
                              "title": "Session Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                              "bq_type": "STRING"
                            },
                            "dsid": {
                              "title": "Dsid",
                              "minLength": 1,
                              "type": "string",
                              "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                              "bq_type": "STRING"
                            },
                            "transaction_id": {
                              "title": "Transaction Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Unique identifier for the transaction.",
                              "bq_type": "STRING"
                            },
                            "event_type": {
                              "title": "Event Type",
                              "enum": [
                                "transaction_mapping"
                              ],
                              "type": "string",
                              "description": "The type identifier for this event: transaction_mapping.",
                              "bq_exclude": true
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "title": "PurchaseEvent",
                          "required": [
                            "transaction_id",
                            "currency",
                            "products"
                          ],
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "User Id. Persistent between devices, typically on a logged in user.",
                              "bq_type": "STRING"
                            },
                            "session_id": {
                              "title": "Session Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                              "bq_type": "STRING"
                            },
                            "dsid": {
                              "title": "Dsid",
                              "minLength": 1,
                              "type": "string",
                              "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                              "bq_type": "STRING"
                            },
                            "transaction_id": {
                              "title": "Transaction Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Unique identifier for the transaction.",
                              "bq_type": "STRING"
                            },
                            "event_type": {
                              "title": "Event Type",
                              "enum": [
                                "purchase"
                              ],
                              "type": "string",
                              "description": "The type identifier for this event: purchase.",
                              "bq_exclude": true
                            },
                            "currency": {
                              "title": "Currency",
                              "pattern": "^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$",
                              "type": "string",
                              "description": "Currency the purchase was paid in",
                              "bq_type": "STRING"
                            },
                            "products": {
                              "title": "Products",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "title": "PurchasedProduct",
                                "required": [
                                  "sku",
                                  "price",
                                  "quantity"
                                ],
                                "type": "object",
                                "properties": {
                                  "sku": {
                                    "title": "Sku",
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Stock keeping unit, a distinct item for sale. If you are using Google Analytics, it should be the same id used for products there.",
                                    "bq_type": "STRING"
                                  },
                                  "price": {
                                    "title": "Price",
                                    "minimum": 0,
                                    "type": "number",
                                    "description": "Price per unit. If there are discounts because of quantity, the unit price should be adjusted accordingly.",
                                    "bq_type": "NUMERIC"
                                  },
                                  "quantity": {
                                    "title": "Quantity",
                                    "minimum": 1,
                                    "type": "integer",
                                    "description": "The number of times the product was purchased.",
                                    "bq_type": "INTEGER"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "description": "All the products purchased in this transaction",
                              "bq_type": ""
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "title": "ProductUnavailableEvent",
                          "required": [
                            "event_type",
                            "product_id",
                            "unavailability_type"
                          ],
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "title": "User Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "User Id. Persistent between devices, typically on a logged in user.",
                              "bq_type": "STRING"
                            },
                            "session_id": {
                              "title": "Session Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                              "bq_type": "STRING"
                            },
                            "dsid": {
                              "title": "Dsid",
                              "minLength": 1,
                              "type": "string",
                              "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                              "bq_type": "STRING"
                            },
                            "event_type": {
                              "title": "Event Type",
                              "enum": [
                                "product_unavailable"
                              ],
                              "type": "string",
                              "description": "The type identifier for this event: product_unavailable.",
                              "bq_exclude": true
                            },
                            "product_id": {
                              "title": "Product Id",
                              "minLength": 1,
                              "type": "string",
                              "description": "Main product identifier",
                              "bq_type": "STRING"
                            },
                            "unavailability_type": {
                              "allOf": [
                                {
                                  "title": "EUnavailabilityType",
                                  "enum": [
                                    "out_of_stock",
                                    "missing"
                                  ],
                                  "type": "string",
                                  "description": "An enumeration."
                                }
                              ],
                              "description": "Reason the product isn't available for purchase",
                              "bq_type": "STRING"
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BaseCategoryDisplay": {
        "title": "BaseCategoryDisplay",
        "required": [
          "category_id",
          "title",
          "page_url"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "title": "Category Id",
            "type": "string",
            "description": "Unique identifier of the category."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "The title of the category"
          },
          "page_url": {
            "title": "Page Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The full URL to the category page",
            "format": "uri"
          },
          "query_id": {
            "title": "Query Id",
            "type": "string",
            "description": "Optionally a unique query ID for the category"
          },
          "uri": {
            "title": "Uri",
            "type": "string",
            "description": "Optionally a unique URI for the category, for example men/shoes"
          },
          "category_type": {
            "allOf": [
              {
                "title": "ECategoryType",
                "enum": [
                  "TAG",
                  "CATEGORY",
                  "TENANT_CATEGORY",
                  "TENANT_SECONDARY_CATEGORY",
                  "CAMPAIGN"
                ],
                "type": "string",
                "description": "An enumeration."
              }
            ],
            "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
            "default": "CATEGORY"
          }
        },
        "additionalProperties": false
      },
      "BaseSearchRequest": {
        "title": "BaseSearchRequest",
        "required": [
          "tenant",
          "market"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "bq_type": "STRING"
          },
          "filters": {
            "title": "Filters",
            "type": "array",
            "items": {
              "title": "SearchFilter",
              "required": [
                "field",
                "op"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to filter by.",
                  "bq_type": "STRING"
                },
                "op": {
                  "title": "Op",
                  "enum": [
                    "eq",
                    "neq",
                    "in",
                    "nin",
                    "leq",
                    "geq",
                    "inrange"
                  ],
                  "type": "string",
                  "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                  "bq_type": "STRING"
                },
                "data": {
                  "title": "Data",
                  "anyOf": [
                    {
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "description": "Data for the filter.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "anyOf": [
                    {
                      "title": "RangeFilterMeta",
                      "required": [
                        "min",
                        "max"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "range"
                          ],
                          "type": "string",
                          "default": "range"
                        },
                        "min": {
                          "title": "Min",
                          "type": "number",
                          "description": "The minimum value that can be selected in the range."
                        },
                        "max": {
                          "title": "Max",
                          "type": "number",
                          "description": "The maximum value that can be selected in the range."
                        },
                        "unit": {
                          "title": "Unit",
                          "type": "string",
                          "description": "The unit of the range values."
                        },
                        "currency": {
                          "title": "Currency",
                          "type": "string",
                          "description": "The currency of the range values."
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "ValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "radio",
                            "checkbox",
                            "checkbox-grid"
                          ],
                          "type": "string",
                          "description": "Type of filter.",
                          "default": "checkbox"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "Selectable values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for values"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "HierarchicalValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "checkbox-hierarchical"
                          ],
                          "type": "string",
                          "default": "checkbox-hierarchical"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "description": "Selectable hierarchical values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for hierarchical values"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                  "bq_exclude": true
                },
                "id": {
                  "title": "Id",
                  "type": "string",
                  "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "List of filters to apply to the results.",
            "bq_type": "JSON_DUMPS"
          },
          "sort": {
            "title": "Sort",
            "allOf": [
              {
                "title": "SortModel",
                "required": [
                  "field",
                  "order"
                ],
                "type": "object",
                "properties": {
                  "field": {
                    "title": "Field",
                    "type": "string",
                    "description": "The field to sort by.",
                    "bq_type": "STRING"
                  },
                  "order": {
                    "allOf": [
                      {
                        "title": "SortingOrder",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ],
                    "description": "The order to sort by.",
                    "bq_type": "STRING"
                  },
                  "meta": {
                    "title": "Meta",
                    "allOf": [
                      {
                        "title": "SortMeta",
                        "required": [
                          "title"
                        ],
                        "type": "object",
                        "properties": {
                          "title": {
                            "title": "Title",
                            "type": "string"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "title": "SortingOrder",
                              "enum": [
                                "asc",
                                "desc"
                              ],
                              "type": "string",
                              "description": "An enumeration."
                            },
                            "description": "Selectable values"
                          },
                          "names": {
                            "title": "Names",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Names for orders"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Metadata about the sort that can be used for rendering. ",
                    "bq_exclude": true
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Specifies the sorting method. By default, the results are ordered by relevance. To find the possible values for this field, query the endpoint and look at the `sorts` field.",
            "bq_type": ""
          },
          "user_id": {
            "title": "User Id",
            "minLength": 1,
            "type": "string",
            "description": "User identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "minLength": 1,
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the search.",
            "bq_type": "JSON_DUMPS",
            "bq_skip_write": true
          },
          "query": {
            "title": "Query",
            "type": "string",
            "description": "The search query.",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "CategoryRecommendRequest": {
        "title": "CategoryRecommendRequest",
        "required": [
          "tenant",
          "market",
          "type",
          "category_id"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "description": "Identifier associated with the API integration",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "description": "Market identifier",
            "bq_type": "STRING"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Type of the recommendation, e.g. `cross_sell`",
            "bq_type": "STRING"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "Customer identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "document_referrer": {
            "title": "Document Referrer",
            "type": "string",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the recommendation system",
            "bq_type": "JSON_DUMPS"
          },
          "category_id": {
            "title": "Category Id",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "CategorySuggestion": {
        "title": "CategorySuggestion",
        "required": [
          "category_id",
          "title",
          "page_url",
          "filter",
          "suggestions_result_id"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "title": "Category Id",
            "type": "string",
            "description": "Unique identifier of the category."
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "The title of the category"
          },
          "page_url": {
            "title": "Page Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The full URL to the category page",
            "format": "uri"
          },
          "query_id": {
            "title": "Query Id",
            "type": "string",
            "description": "Optionally a unique query ID for the category"
          },
          "uri": {
            "title": "Uri",
            "type": "string",
            "description": "Optionally a unique URI for the category, for example men/shoes"
          },
          "category_type": {
            "allOf": [
              {
                "title": "ECategoryType",
                "enum": [
                  "TAG",
                  "CATEGORY",
                  "TENANT_CATEGORY",
                  "TENANT_SECONDARY_CATEGORY",
                  "CAMPAIGN"
                ],
                "type": "string",
                "description": "An enumeration."
              }
            ],
            "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
            "default": "CATEGORY"
          },
          "type": {
            "title": "Type",
            "enum": [
              "category"
            ],
            "type": "string",
            "description": "type",
            "default": "category",
            "bq_type": "STRING"
          },
          "filter": {
            "title": "Filter",
            "allOf": [
              {
                "title": "SearchFilter",
                "required": [
                  "field",
                  "op"
                ],
                "type": "object",
                "properties": {
                  "field": {
                    "title": "Field",
                    "type": "string",
                    "description": "The field to filter by.",
                    "bq_type": "STRING"
                  },
                  "op": {
                    "title": "Op",
                    "enum": [
                      "eq",
                      "neq",
                      "in",
                      "nin",
                      "leq",
                      "geq",
                      "inrange"
                    ],
                    "type": "string",
                    "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                    "bq_type": "STRING"
                  },
                  "data": {
                    "title": "Data",
                    "anyOf": [
                      {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array",
                        "items": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      {
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array",
                        "items": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      },
                      {
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array",
                        "items": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      {
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array",
                        "items": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      },
                      {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            {
                              "maxItems": 2,
                              "minItems": 2,
                              "type": "array",
                              "items": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "description": "Data for the filter.",
                    "bq_type": "STRING"
                  },
                  "meta": {
                    "title": "Meta",
                    "anyOf": [
                      {
                        "title": "RangeFilterMeta",
                        "required": [
                          "min",
                          "max"
                        ],
                        "type": "object",
                        "properties": {
                          "group_title": {
                            "title": "Group Title",
                            "type": "string",
                            "description": "Title of the group, where a group consists of all the filters that share an ID."
                          },
                          "group_expanded": {
                            "title": "Group Expanded",
                            "type": "boolean",
                            "description": "Whether the filter group should be expanded by default or not."
                          },
                          "type": {
                            "title": "Type",
                            "enum": [
                              "range"
                            ],
                            "type": "string",
                            "default": "range"
                          },
                          "min": {
                            "title": "Min",
                            "type": "number",
                            "description": "The minimum value that can be selected in the range."
                          },
                          "max": {
                            "title": "Max",
                            "type": "number",
                            "description": "The maximum value that can be selected in the range."
                          },
                          "unit": {
                            "title": "Unit",
                            "type": "string",
                            "description": "The unit of the range values."
                          },
                          "currency": {
                            "title": "Currency",
                            "type": "string",
                            "description": "The currency of the range values."
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "title": "ValuesFilterMeta",
                        "required": [
                          "values"
                        ],
                        "type": "object",
                        "properties": {
                          "group_title": {
                            "title": "Group Title",
                            "type": "string",
                            "description": "Title of the group, where a group consists of all the filters that share an ID."
                          },
                          "group_expanded": {
                            "title": "Group Expanded",
                            "type": "boolean",
                            "description": "Whether the filter group should be expanded by default or not."
                          },
                          "type": {
                            "title": "Type",
                            "enum": [
                              "radio",
                              "checkbox",
                              "checkbox-grid"
                            ],
                            "type": "string",
                            "description": "Type of filter.",
                            "default": "checkbox"
                          },
                          "values": {
                            "title": "Values",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                }
                              ]
                            },
                            "description": "Selectable values"
                          },
                          "counts": {
                            "title": "Counts",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "description": "Counts for values"
                          },
                          "names": {
                            "title": "Names",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Names for values"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "title": "HierarchicalValuesFilterMeta",
                        "required": [
                          "values"
                        ],
                        "type": "object",
                        "properties": {
                          "group_title": {
                            "title": "Group Title",
                            "type": "string",
                            "description": "Title of the group, where a group consists of all the filters that share an ID."
                          },
                          "group_expanded": {
                            "title": "Group Expanded",
                            "type": "boolean",
                            "description": "Whether the filter group should be expanded by default or not."
                          },
                          "type": {
                            "title": "Type",
                            "enum": [
                              "checkbox-hierarchical"
                            ],
                            "type": "string",
                            "default": "checkbox-hierarchical"
                          },
                          "values": {
                            "title": "Values",
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              }
                            },
                            "description": "Selectable hierarchical values"
                          },
                          "counts": {
                            "title": "Counts",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "description": "Counts for values"
                          },
                          "names": {
                            "title": "Names",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Names for hierarchical values"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                    "bq_exclude": true
                  },
                  "id": {
                    "title": "Id",
                    "type": "string",
                    "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                    "bq_exclude": true
                  }
                },
                "additionalProperties": false
              }
            ],
            "bq_exclude": true
          },
          "suggestions_result_id": {
            "title": "Suggestions Result Id",
            "type": "string",
            "bq_type": "STRING"
          }
        }
      },
      "ECategoryType": {
        "title": "ECategoryType",
        "enum": [
          "TAG",
          "CATEGORY",
          "TENANT_CATEGORY",
          "TENANT_SECONDARY_CATEGORY",
          "CAMPAIGN"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EEventType": {
        "title": "EEventType",
        "enum": [
          "page_view",
          "click",
          "add_to_cart",
          "purchase",
          "element_visible",
          "ws_click",
          "recommendations_inserted"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EUnavailabilityType": {
        "title": "EUnavailabilityType",
        "enum": [
          "out_of_stock",
          "missing"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Event": {
        "title": "Event",
        "required": [
          "tenant",
          "market",
          "type"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "description": "Identifier associated with the API integration",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "description": "Market identifier",
            "bq_type": "STRING"
          },
          "deduplication_id": {
            "title": "Deduplication Id",
            "type": "string",
            "description": "If retrying creating events, this should be set to a unique value common across all requests with the same event",
            "bq_type": "STRING"
          },
          "type": {
            "allOf": [
              {
                "title": "EEventType",
                "enum": [
                  "page_view",
                  "click",
                  "add_to_cart",
                  "purchase",
                  "element_visible",
                  "ws_click",
                  "recommendations_inserted"
                ],
                "type": "string",
                "description": "An enumeration."
              }
            ],
            "description": "Type of event",
            "bq_type": "STRING"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "Customer identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "ab_test_group": {
            "title": "Ab Test Group",
            "type": "string",
            "description": "A/B test group identifier. Not required.",
            "bq_type": "STRING"
          },
          "product_id": {
            "title": "Product Id",
            "type": "string",
            "description": "Main product identifier",
            "bq_type": "STRING"
          },
          "variant_ids": {
            "title": "Variant Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of variants for this product. Not required.",
            "bq_type": "STRING"
          },
          "entity_identifiers": {
            "title": "Entity Identifiers",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value object containing additional identifiers for the product",
            "bq_type": "JSON_DUMPS"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "The value of `document.location.href` in the user's browser",
            "bq_type": "STRING"
          },
          "entity_price": {
            "title": "Entity Price",
            "type": "string",
            "description": "Current price of product. Not required.",
            "bq_type": "STRING"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "Currency of product (ISO 4217 code). Not required.",
            "bq_type": "STRING"
          },
          "document_referrer": {
            "title": "Document Referrer",
            "type": "string",
            "description": "The value of `document.referrer` in the user's browser",
            "bq_type": "STRING"
          },
          "document_width": {
            "title": "Document Width",
            "type": "string",
            "description": "The value of `document.width` in the user's browser",
            "bq_type": "STRING"
          },
          "attribution_id": {
            "title": "Attribution Id",
            "type": "string",
            "description": "Keyword specifying what led to this event. Not required.",
            "bq_type": "STRING"
          },
          "recommendation_id": {
            "title": "Recommendation Id",
            "type": "string",
            "description": "Unique identifier returned from the `/recommend` endpoint",
            "bq_type": "STRING"
          },
          "search_result_id": {
            "title": "Search Result Id",
            "type": "string",
            "description": "Unique identifier of the search result.",
            "bq_type": "STRING"
          },
          "product_listing_result_id": {
            "title": "Product Listing Result Id",
            "type": "string",
            "description": "Unique identifier of the product listing result.",
            "bq_type": "STRING"
          },
          "click_location": {
            "title": "Click Location",
            "type": "string",
            "description": "Keyword specifying what element was clicked. Not required.",
            "bq_type": "STRING"
          },
          "page_url": {
            "title": "Page Url",
            "type": "string",
            "description": "The URL of the product page visited",
            "bq_type": "STRING"
          },
          "recommendation_type": {
            "title": "Recommendation Type",
            "type": "string",
            "description": "The type of recommendations inserted",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "GeneralRecommendRequest": {
        "title": "GeneralRecommendRequest",
        "required": [
          "tenant",
          "market",
          "type"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "description": "Identifier associated with the API integration",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "description": "Market identifier",
            "bq_type": "STRING"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Type of the recommendation, e.g. `cross_sell`",
            "bq_type": "STRING"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "Customer identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "document_referrer": {
            "title": "Document Referrer",
            "type": "string",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the recommendation system",
            "bq_type": "JSON_DUMPS"
          }
        },
        "additionalProperties": false
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "title": "ValidationError",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "type": "object",
              "properties": {
                "loc": {
                  "title": "Location",
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                },
                "msg": {
                  "title": "Message",
                  "type": "string"
                },
                "type": {
                  "title": "Error Type",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "HierarchicalValuesFilterMeta": {
        "title": "HierarchicalValuesFilterMeta",
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string",
            "description": "Title of the group, where a group consists of all the filters that share an ID."
          },
          "group_expanded": {
            "title": "Group Expanded",
            "type": "boolean",
            "description": "Whether the filter group should be expanded by default or not."
          },
          "type": {
            "title": "Type",
            "enum": [
              "checkbox-hierarchical"
            ],
            "type": "string",
            "default": "checkbox-hierarchical"
          },
          "values": {
            "title": "Values",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "enum": [
                      "true",
                      "false"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "description": "Selectable hierarchical values"
          },
          "counts": {
            "title": "Counts",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Counts for values"
          },
          "names": {
            "title": "Names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names for hierarchical values"
          }
        },
        "additionalProperties": false
      },
      "ProductListingRequest": {
        "title": "ProductListingRequest",
        "required": [
          "tenant",
          "market",
          "query_id"
        ],
        "type": "object",
        "properties": {
          "cursor": {
            "title": "Cursor",
            "maxLength": 500,
            "type": "string",
            "description": "Used for cursor-based pagination. Set it to the cursor from the last response. If not set, will return the first results.",
            "bq_type": "STRING"
          },
          "limit": {
            "title": "Limit",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of results per response.",
            "bq_type": "INTEGER"
          },
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "bq_type": "STRING"
          },
          "filters": {
            "title": "Filters",
            "type": "array",
            "items": {
              "title": "SearchFilter",
              "required": [
                "field",
                "op"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to filter by.",
                  "bq_type": "STRING"
                },
                "op": {
                  "title": "Op",
                  "enum": [
                    "eq",
                    "neq",
                    "in",
                    "nin",
                    "leq",
                    "geq",
                    "inrange"
                  ],
                  "type": "string",
                  "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                  "bq_type": "STRING"
                },
                "data": {
                  "title": "Data",
                  "anyOf": [
                    {
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "description": "Data for the filter.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "anyOf": [
                    {
                      "title": "RangeFilterMeta",
                      "required": [
                        "min",
                        "max"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "range"
                          ],
                          "type": "string",
                          "default": "range"
                        },
                        "min": {
                          "title": "Min",
                          "type": "number",
                          "description": "The minimum value that can be selected in the range."
                        },
                        "max": {
                          "title": "Max",
                          "type": "number",
                          "description": "The maximum value that can be selected in the range."
                        },
                        "unit": {
                          "title": "Unit",
                          "type": "string",
                          "description": "The unit of the range values."
                        },
                        "currency": {
                          "title": "Currency",
                          "type": "string",
                          "description": "The currency of the range values."
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "ValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "radio",
                            "checkbox",
                            "checkbox-grid"
                          ],
                          "type": "string",
                          "description": "Type of filter.",
                          "default": "checkbox"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "Selectable values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for values"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "HierarchicalValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "checkbox-hierarchical"
                          ],
                          "type": "string",
                          "default": "checkbox-hierarchical"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "description": "Selectable hierarchical values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for hierarchical values"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                  "bq_exclude": true
                },
                "id": {
                  "title": "Id",
                  "type": "string",
                  "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "List of filters to apply to the results.",
            "bq_type": "JSON_DUMPS"
          },
          "sort": {
            "title": "Sort",
            "allOf": [
              {
                "title": "SortModel",
                "required": [
                  "field",
                  "order"
                ],
                "type": "object",
                "properties": {
                  "field": {
                    "title": "Field",
                    "type": "string",
                    "description": "The field to sort by.",
                    "bq_type": "STRING"
                  },
                  "order": {
                    "allOf": [
                      {
                        "title": "SortingOrder",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ],
                    "description": "The order to sort by.",
                    "bq_type": "STRING"
                  },
                  "meta": {
                    "title": "Meta",
                    "allOf": [
                      {
                        "title": "SortMeta",
                        "required": [
                          "title"
                        ],
                        "type": "object",
                        "properties": {
                          "title": {
                            "title": "Title",
                            "type": "string"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "title": "SortingOrder",
                              "enum": [
                                "asc",
                                "desc"
                              ],
                              "type": "string",
                              "description": "An enumeration."
                            },
                            "description": "Selectable values"
                          },
                          "names": {
                            "title": "Names",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Names for orders"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Metadata about the sort that can be used for rendering. ",
                    "bq_exclude": true
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Specifies the sorting method. By default, the results are ordered by relevance. To find the possible values for this field, query the endpoint and look at the `sorts` field.",
            "bq_type": ""
          },
          "user_id": {
            "title": "User Id",
            "minLength": 1,
            "type": "string",
            "description": "User identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "minLength": 1,
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the search.",
            "bq_type": "JSON_DUMPS",
            "bq_skip_write": true
          },
          "query_id": {
            "title": "Query Id",
            "minLength": 1,
            "type": "string",
            "description": "ID of the page to get products for. This is typically the slug, for example `hoodies-and-sweaters`.",
            "bq_type": "STRING"
          },
          "type": {
            "allOf": [
              {
                "title": "ProductListingType",
                "enum": [
                  "category",
                  "collection"
                ],
                "type": "string",
                "description": "An enumeration."
              }
            ],
            "description": "The type of query. If not set the endpoint will look up query id in the following type order: collections, categories.",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "ProductListingResponse": {
        "title": "ProductListingResponse",
        "required": [
          "n_hits",
          "displays",
          "product_listing_request_id"
        ],
        "type": "object",
        "properties": {
          "n_hits": {
            "title": "N Hits",
            "type": "integer",
            "description": "Total number of results for this query. Not necessarily exact.",
            "bq_type": "INTEGER"
          },
          "displays": {
            "title": "Displays",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "The products to be shown on the product listing page.",
            "bq_type": "JSON_DUMPS"
          },
          "sorts": {
            "title": "Sorts",
            "type": "array",
            "items": {
              "title": "SortModel",
              "required": [
                "field",
                "order"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to sort by.",
                  "bq_type": "STRING"
                },
                "order": {
                  "allOf": [
                    {
                      "title": "SortingOrder",
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    }
                  ],
                  "description": "The order to sort by.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "allOf": [
                    {
                      "title": "SortMeta",
                      "required": [
                        "title"
                      ],
                      "type": "object",
                      "properties": {
                        "title": {
                          "title": "Title",
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "title": "SortingOrder",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "description": "Selectable values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for orders"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the sort that can be used for rendering. ",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "Available methods for sorting the response. Any element from this list can be sent as `sort` in subsequent requests.",
            "bq_type": ""
          },
          "filters": {
            "title": "Filters",
            "type": "array",
            "items": {
              "title": "SearchFilter",
              "required": [
                "field",
                "op"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to filter by.",
                  "bq_type": "STRING"
                },
                "op": {
                  "title": "Op",
                  "enum": [
                    "eq",
                    "neq",
                    "in",
                    "nin",
                    "leq",
                    "geq",
                    "inrange"
                  ],
                  "type": "string",
                  "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                  "bq_type": "STRING"
                },
                "data": {
                  "title": "Data",
                  "anyOf": [
                    {
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "description": "Data for the filter.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "anyOf": [
                    {
                      "title": "RangeFilterMeta",
                      "required": [
                        "min",
                        "max"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "range"
                          ],
                          "type": "string",
                          "default": "range"
                        },
                        "min": {
                          "title": "Min",
                          "type": "number",
                          "description": "The minimum value that can be selected in the range."
                        },
                        "max": {
                          "title": "Max",
                          "type": "number",
                          "description": "The maximum value that can be selected in the range."
                        },
                        "unit": {
                          "title": "Unit",
                          "type": "string",
                          "description": "The unit of the range values."
                        },
                        "currency": {
                          "title": "Currency",
                          "type": "string",
                          "description": "The currency of the range values."
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "ValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "radio",
                            "checkbox",
                            "checkbox-grid"
                          ],
                          "type": "string",
                          "description": "Type of filter.",
                          "default": "checkbox"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "Selectable values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for values"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "HierarchicalValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "checkbox-hierarchical"
                          ],
                          "type": "string",
                          "default": "checkbox-hierarchical"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "description": "Selectable hierarchical values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for hierarchical values"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                  "bq_exclude": true
                },
                "id": {
                  "title": "Id",
                  "type": "string",
                  "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "Available filters that can be used for filtering in the subsequent request.",
            "bq_exclude": true
          },
          "product_listing_request_id": {
            "title": "Product Listing Request Id",
            "type": "string",
            "bq_type": "STRING"
          },
          "breadcrumb": {
            "title": "Breadcrumb",
            "type": "array",
            "items": {
              "title": "BaseCategoryDisplay",
              "required": [
                "category_id",
                "title",
                "page_url"
              ],
              "type": "object",
              "properties": {
                "category_id": {
                  "title": "Category Id",
                  "type": "string",
                  "description": "Unique identifier of the category."
                },
                "title": {
                  "title": "Title",
                  "type": "string",
                  "description": "The title of the category"
                },
                "page_url": {
                  "title": "Page Url",
                  "maxLength": 2083,
                  "minLength": 1,
                  "type": "string",
                  "description": "The full URL to the category page",
                  "format": "uri"
                },
                "query_id": {
                  "title": "Query Id",
                  "type": "string",
                  "description": "Optionally a unique query ID for the category"
                },
                "uri": {
                  "title": "Uri",
                  "type": "string",
                  "description": "Optionally a unique URI for the category, for example men/shoes"
                },
                "category_type": {
                  "allOf": [
                    {
                      "title": "ECategoryType",
                      "enum": [
                        "TAG",
                        "CATEGORY",
                        "TENANT_CATEGORY",
                        "TENANT_SECONDARY_CATEGORY",
                        "CAMPAIGN"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    }
                  ],
                  "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
                  "default": "CATEGORY"
                }
              },
              "additionalProperties": false
            },
            "description": "Breadcrumb for the current page. Ordered from less to more specific, where the last element is the current page.",
            "bq_exclude": true
          },
          "quick_links": {
            "title": "Quick Links",
            "type": "array",
            "items": {
              "title": "BaseCategoryDisplay",
              "required": [
                "category_id",
                "title",
                "page_url"
              ],
              "type": "object",
              "properties": {
                "category_id": {
                  "title": "Category Id",
                  "type": "string",
                  "description": "Unique identifier of the category."
                },
                "title": {
                  "title": "Title",
                  "type": "string",
                  "description": "The title of the category"
                },
                "page_url": {
                  "title": "Page Url",
                  "maxLength": 2083,
                  "minLength": 1,
                  "type": "string",
                  "description": "The full URL to the category page",
                  "format": "uri"
                },
                "query_id": {
                  "title": "Query Id",
                  "type": "string",
                  "description": "Optionally a unique query ID for the category"
                },
                "uri": {
                  "title": "Uri",
                  "type": "string",
                  "description": "Optionally a unique URI for the category, for example men/shoes"
                },
                "category_type": {
                  "allOf": [
                    {
                      "title": "ECategoryType",
                      "enum": [
                        "TAG",
                        "CATEGORY",
                        "TENANT_CATEGORY",
                        "TENANT_SECONDARY_CATEGORY",
                        "CAMPAIGN"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    }
                  ],
                  "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
                  "default": "CATEGORY"
                }
              },
              "additionalProperties": false
            },
            "description": "List of pages that can be used as quick links. Will return child pages if they exist, otherwise sibling pages.",
            "bq_exclude": true
          },
          "cursor": {
            "title": "Cursor",
            "maxLength": 500,
            "type": "string",
            "description": "Cursor that can be used in the next request to get subsequent results. If this is not set, there are no more results.",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "ProductListingType": {
        "title": "ProductListingType",
        "enum": [
          "category",
          "collection"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ProductUnavailableEvent": {
        "title": "ProductUnavailableEvent",
        "required": [
          "event_type",
          "product_id",
          "unavailability_type"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "minLength": 1,
            "type": "string",
            "description": "User Id. Persistent between devices, typically on a logged in user.",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "minLength": 1,
            "type": "string",
            "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
            "bq_type": "STRING"
          },
          "event_type": {
            "title": "Event Type",
            "enum": [
              "product_unavailable"
            ],
            "type": "string",
            "description": "The type identifier for this event: product_unavailable.",
            "bq_exclude": true
          },
          "product_id": {
            "title": "Product Id",
            "minLength": 1,
            "type": "string",
            "description": "Main product identifier",
            "bq_type": "STRING"
          },
          "unavailability_type": {
            "allOf": [
              {
                "title": "EUnavailabilityType",
                "enum": [
                  "out_of_stock",
                  "missing"
                ],
                "type": "string",
                "description": "An enumeration."
              }
            ],
            "description": "Reason the product isn't available for purchase",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "PurchaseEvent": {
        "title": "PurchaseEvent",
        "required": [
          "transaction_id",
          "currency",
          "products"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "minLength": 1,
            "type": "string",
            "description": "User Id. Persistent between devices, typically on a logged in user.",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "minLength": 1,
            "type": "string",
            "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
            "bq_type": "STRING"
          },
          "transaction_id": {
            "title": "Transaction Id",
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the transaction.",
            "bq_type": "STRING"
          },
          "event_type": {
            "title": "Event Type",
            "enum": [
              "purchase"
            ],
            "type": "string",
            "description": "The type identifier for this event: purchase.",
            "bq_exclude": true
          },
          "currency": {
            "title": "Currency",
            "pattern": "^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$",
            "type": "string",
            "description": "Currency the purchase was paid in",
            "bq_type": "STRING"
          },
          "products": {
            "title": "Products",
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "PurchasedProduct",
              "required": [
                "sku",
                "price",
                "quantity"
              ],
              "type": "object",
              "properties": {
                "sku": {
                  "title": "Sku",
                  "minLength": 1,
                  "type": "string",
                  "description": "Stock keeping unit, a distinct item for sale. If you are using Google Analytics, it should be the same id used for products there.",
                  "bq_type": "STRING"
                },
                "price": {
                  "title": "Price",
                  "minimum": 0,
                  "type": "number",
                  "description": "Price per unit. If there are discounts because of quantity, the unit price should be adjusted accordingly.",
                  "bq_type": "NUMERIC"
                },
                "quantity": {
                  "title": "Quantity",
                  "minimum": 1,
                  "type": "integer",
                  "description": "The number of times the product was purchased.",
                  "bq_type": "INTEGER"
                }
              },
              "additionalProperties": false
            },
            "description": "All the products purchased in this transaction",
            "bq_type": ""
          }
        },
        "additionalProperties": false
      },
      "PurchasedProduct": {
        "title": "PurchasedProduct",
        "required": [
          "sku",
          "price",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "sku": {
            "title": "Sku",
            "minLength": 1,
            "type": "string",
            "description": "Stock keeping unit, a distinct item for sale. If you are using Google Analytics, it should be the same id used for products there.",
            "bq_type": "STRING"
          },
          "price": {
            "title": "Price",
            "minimum": 0,
            "type": "number",
            "description": "Price per unit. If there are discounts because of quantity, the unit price should be adjusted accordingly.",
            "bq_type": "NUMERIC"
          },
          "quantity": {
            "title": "Quantity",
            "minimum": 1,
            "type": "integer",
            "description": "The number of times the product was purchased.",
            "bq_type": "INTEGER"
          }
        },
        "additionalProperties": false
      },
      "QuerySuggestion": {
        "title": "QuerySuggestion",
        "required": [
          "title",
          "suggestions_result_id"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "enum": [
              "query"
            ],
            "type": "string",
            "default": "query",
            "bq_type": "STRING"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Title for suggestion.",
            "bq_type": "STRING"
          },
          "suggestions_result_id": {
            "title": "Suggestions Result Id",
            "type": "string",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "RangeFilterMeta": {
        "title": "RangeFilterMeta",
        "required": [
          "min",
          "max"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string",
            "description": "Title of the group, where a group consists of all the filters that share an ID."
          },
          "group_expanded": {
            "title": "Group Expanded",
            "type": "boolean",
            "description": "Whether the filter group should be expanded by default or not."
          },
          "type": {
            "title": "Type",
            "enum": [
              "range"
            ],
            "type": "string",
            "default": "range"
          },
          "min": {
            "title": "Min",
            "type": "number",
            "description": "The minimum value that can be selected in the range."
          },
          "max": {
            "title": "Max",
            "type": "number",
            "description": "The maximum value that can be selected in the range."
          },
          "unit": {
            "title": "Unit",
            "type": "string",
            "description": "The unit of the range values."
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "The currency of the range values."
          }
        },
        "additionalProperties": false
      },
      "RecommendForManyRequest": {
        "title": "RecommendForManyRequest",
        "required": [
          "tenant",
          "market",
          "type",
          "product_ids"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "description": "Identifier associated with the API integration",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "description": "Market identifier",
            "bq_type": "STRING"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Type of the recommendation, e.g. `cross_sell`",
            "bq_type": "STRING"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "Customer identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "document_referrer": {
            "title": "Document Referrer",
            "type": "string",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the recommendation system",
            "bq_type": "JSON_DUMPS"
          },
          "product_ids": {
            "title": "Product Ids",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "RecommendRequest": {
        "title": "RecommendRequest",
        "required": [
          "tenant",
          "market",
          "type",
          "product_id"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "description": "Identifier associated with the API integration",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "description": "Market identifier",
            "bq_type": "STRING"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Type of the recommendation, e.g. `cross_sell`",
            "bq_type": "STRING"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "Customer identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "document_referrer": {
            "title": "Document Referrer",
            "type": "string",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the recommendation system",
            "bq_type": "JSON_DUMPS"
          },
          "product_id": {
            "title": "Product Id",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "RecommendResponse": {
        "title": "RecommendResponse",
        "required": [
          "displays"
        ],
        "type": "object",
        "properties": {
          "displays": {
            "title": "Displays",
            "type": "array",
            "items": {
              "type": "object"
            },
            "bq_type": "JSON_DUMPS"
          },
          "error": {
            "title": "Error",
            "type": "string",
            "bq_type": "STRING"
          },
          "variant": {
            "title": "Variant",
            "type": "integer",
            "bq_type": "INTEGER"
          },
          "experiment_id": {
            "title": "Experiment Id",
            "type": "string",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "SearchFilter": {
        "title": "SearchFilter",
        "required": [
          "field",
          "op"
        ],
        "type": "object",
        "properties": {
          "field": {
            "title": "Field",
            "type": "string",
            "description": "The field to filter by.",
            "bq_type": "STRING"
          },
          "op": {
            "title": "Op",
            "enum": [
              "eq",
              "neq",
              "in",
              "nin",
              "leq",
              "geq",
              "inrange"
            ],
            "type": "string",
            "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
            "bq_type": "STRING"
          },
          "data": {
            "title": "Data",
            "anyOf": [
              {
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "type": "array",
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "type": "array",
                "items": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "type": "array",
                "items": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "type": "array",
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            ],
            "description": "Data for the filter.",
            "bq_type": "STRING"
          },
          "meta": {
            "title": "Meta",
            "anyOf": [
              {
                "title": "RangeFilterMeta",
                "required": [
                  "min",
                  "max"
                ],
                "type": "object",
                "properties": {
                  "group_title": {
                    "title": "Group Title",
                    "type": "string",
                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                  },
                  "group_expanded": {
                    "title": "Group Expanded",
                    "type": "boolean",
                    "description": "Whether the filter group should be expanded by default or not."
                  },
                  "type": {
                    "title": "Type",
                    "enum": [
                      "range"
                    ],
                    "type": "string",
                    "default": "range"
                  },
                  "min": {
                    "title": "Min",
                    "type": "number",
                    "description": "The minimum value that can be selected in the range."
                  },
                  "max": {
                    "title": "Max",
                    "type": "number",
                    "description": "The maximum value that can be selected in the range."
                  },
                  "unit": {
                    "title": "Unit",
                    "type": "string",
                    "description": "The unit of the range values."
                  },
                  "currency": {
                    "title": "Currency",
                    "type": "string",
                    "description": "The currency of the range values."
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "ValuesFilterMeta",
                "required": [
                  "values"
                ],
                "type": "object",
                "properties": {
                  "group_title": {
                    "title": "Group Title",
                    "type": "string",
                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                  },
                  "group_expanded": {
                    "title": "Group Expanded",
                    "type": "boolean",
                    "description": "Whether the filter group should be expanded by default or not."
                  },
                  "type": {
                    "title": "Type",
                    "enum": [
                      "radio",
                      "checkbox",
                      "checkbox-grid"
                    ],
                    "type": "string",
                    "description": "Type of filter.",
                    "default": "checkbox"
                  },
                  "values": {
                    "title": "Values",
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array",
                          "items": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array",
                          "items": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        },
                        {
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array",
                          "items": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array",
                          "items": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      ]
                    },
                    "description": "Selectable values"
                  },
                  "counts": {
                    "title": "Counts",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Counts for values"
                  },
                  "names": {
                    "title": "Names",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Names for values"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "HierarchicalValuesFilterMeta",
                "required": [
                  "values"
                ],
                "type": "object",
                "properties": {
                  "group_title": {
                    "title": "Group Title",
                    "type": "string",
                    "description": "Title of the group, where a group consists of all the filters that share an ID."
                  },
                  "group_expanded": {
                    "title": "Group Expanded",
                    "type": "boolean",
                    "description": "Whether the filter group should be expanded by default or not."
                  },
                  "type": {
                    "title": "Type",
                    "enum": [
                      "checkbox-hierarchical"
                    ],
                    "type": "string",
                    "default": "checkbox-hierarchical"
                  },
                  "values": {
                    "title": "Values",
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "description": "Selectable hierarchical values"
                  },
                  "counts": {
                    "title": "Counts",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Counts for values"
                  },
                  "names": {
                    "title": "Names",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Names for hierarchical values"
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
            "bq_exclude": true
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
            "bq_exclude": true
          }
        },
        "additionalProperties": false
      },
      "SearchRequest": {
        "title": "SearchRequest",
        "required": [
          "tenant",
          "market"
        ],
        "type": "object",
        "properties": {
          "cursor": {
            "title": "Cursor",
            "maxLength": 500,
            "type": "string",
            "description": "Used for cursor-based pagination. Set it to the cursor from the last response. If not set, will return the first results.",
            "bq_type": "STRING"
          },
          "limit": {
            "title": "Limit",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of results per response.",
            "bq_type": "INTEGER"
          },
          "tenant": {
            "title": "Tenant",
            "type": "string",
            "bq_type": "STRING"
          },
          "market": {
            "title": "Market",
            "type": "string",
            "bq_type": "STRING"
          },
          "filters": {
            "title": "Filters",
            "type": "array",
            "items": {
              "title": "SearchFilter",
              "required": [
                "field",
                "op"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to filter by.",
                  "bq_type": "STRING"
                },
                "op": {
                  "title": "Op",
                  "enum": [
                    "eq",
                    "neq",
                    "in",
                    "nin",
                    "leq",
                    "geq",
                    "inrange"
                  ],
                  "type": "string",
                  "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                  "bq_type": "STRING"
                },
                "data": {
                  "title": "Data",
                  "anyOf": [
                    {
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "description": "Data for the filter.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "anyOf": [
                    {
                      "title": "RangeFilterMeta",
                      "required": [
                        "min",
                        "max"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "range"
                          ],
                          "type": "string",
                          "default": "range"
                        },
                        "min": {
                          "title": "Min",
                          "type": "number",
                          "description": "The minimum value that can be selected in the range."
                        },
                        "max": {
                          "title": "Max",
                          "type": "number",
                          "description": "The maximum value that can be selected in the range."
                        },
                        "unit": {
                          "title": "Unit",
                          "type": "string",
                          "description": "The unit of the range values."
                        },
                        "currency": {
                          "title": "Currency",
                          "type": "string",
                          "description": "The currency of the range values."
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "ValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "radio",
                            "checkbox",
                            "checkbox-grid"
                          ],
                          "type": "string",
                          "description": "Type of filter.",
                          "default": "checkbox"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "Selectable values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for values"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "HierarchicalValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "checkbox-hierarchical"
                          ],
                          "type": "string",
                          "default": "checkbox-hierarchical"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "description": "Selectable hierarchical values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for hierarchical values"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                  "bq_exclude": true
                },
                "id": {
                  "title": "Id",
                  "type": "string",
                  "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "List of filters to apply to the results.",
            "bq_type": "JSON_DUMPS"
          },
          "sort": {
            "title": "Sort",
            "allOf": [
              {
                "title": "SortModel",
                "required": [
                  "field",
                  "order"
                ],
                "type": "object",
                "properties": {
                  "field": {
                    "title": "Field",
                    "type": "string",
                    "description": "The field to sort by.",
                    "bq_type": "STRING"
                  },
                  "order": {
                    "allOf": [
                      {
                        "title": "SortingOrder",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ],
                    "description": "The order to sort by.",
                    "bq_type": "STRING"
                  },
                  "meta": {
                    "title": "Meta",
                    "allOf": [
                      {
                        "title": "SortMeta",
                        "required": [
                          "title"
                        ],
                        "type": "object",
                        "properties": {
                          "title": {
                            "title": "Title",
                            "type": "string"
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "title": "SortingOrder",
                              "enum": [
                                "asc",
                                "desc"
                              ],
                              "type": "string",
                              "description": "An enumeration."
                            },
                            "description": "Selectable values"
                          },
                          "names": {
                            "title": "Names",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Names for orders"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "description": "Metadata about the sort that can be used for rendering. ",
                    "bq_exclude": true
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Specifies the sorting method. By default, the results are ordered by relevance. To find the possible values for this field, query the endpoint and look at the `sorts` field.",
            "bq_type": ""
          },
          "user_id": {
            "title": "User Id",
            "minLength": 1,
            "type": "string",
            "description": "User identifier",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "minLength": 1,
            "type": "string",
            "description": "Session identifier",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id",
            "bq_type": "STRING"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata that can be used to modify the behaviour of the search.",
            "bq_type": "JSON_DUMPS",
            "bq_skip_write": true
          },
          "query": {
            "title": "Query",
            "type": "string",
            "description": "The search query.",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "SearchResponse": {
        "title": "SearchResponse",
        "required": [
          "n_hits",
          "displays",
          "search_request_id"
        ],
        "type": "object",
        "properties": {
          "n_hits": {
            "title": "N Hits",
            "type": "integer",
            "description": "Total number of results for this query. Not necessarily exact.",
            "bq_type": "INTEGER"
          },
          "displays": {
            "title": "Displays",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "The search results.",
            "bq_type": "JSON_DUMPS"
          },
          "sorts": {
            "title": "Sorts",
            "type": "array",
            "items": {
              "title": "SortModel",
              "required": [
                "field",
                "order"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to sort by.",
                  "bq_type": "STRING"
                },
                "order": {
                  "allOf": [
                    {
                      "title": "SortingOrder",
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    }
                  ],
                  "description": "The order to sort by.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "allOf": [
                    {
                      "title": "SortMeta",
                      "required": [
                        "title"
                      ],
                      "type": "object",
                      "properties": {
                        "title": {
                          "title": "Title",
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "title": "SortingOrder",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "description": "Selectable values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for orders"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the sort that can be used for rendering. ",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "Available methods for sorting the response. Any element from this list can be sent as `sort` in subsequent requests.",
            "bq_type": ""
          },
          "filters": {
            "title": "Filters",
            "type": "array",
            "items": {
              "title": "SearchFilter",
              "required": [
                "field",
                "op"
              ],
              "type": "object",
              "properties": {
                "field": {
                  "title": "Field",
                  "type": "string",
                  "description": "The field to filter by.",
                  "bq_type": "STRING"
                },
                "op": {
                  "title": "Op",
                  "enum": [
                    "eq",
                    "neq",
                    "in",
                    "nin",
                    "leq",
                    "geq",
                    "inrange"
                  ],
                  "type": "string",
                  "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                  "bq_type": "STRING"
                },
                "data": {
                  "title": "Data",
                  "anyOf": [
                    {
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    {
                      "maxItems": 2,
                      "minItems": 2,
                      "type": "array",
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "enum": [
                              "true",
                              "false"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array",
                            "items": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "description": "Data for the filter.",
                  "bq_type": "STRING"
                },
                "meta": {
                  "title": "Meta",
                  "anyOf": [
                    {
                      "title": "RangeFilterMeta",
                      "required": [
                        "min",
                        "max"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "range"
                          ],
                          "type": "string",
                          "default": "range"
                        },
                        "min": {
                          "title": "Min",
                          "type": "number",
                          "description": "The minimum value that can be selected in the range."
                        },
                        "max": {
                          "title": "Max",
                          "type": "number",
                          "description": "The maximum value that can be selected in the range."
                        },
                        "unit": {
                          "title": "Unit",
                          "type": "string",
                          "description": "The unit of the range values."
                        },
                        "currency": {
                          "title": "Currency",
                          "type": "string",
                          "description": "The currency of the range values."
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "ValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "radio",
                            "checkbox",
                            "checkbox-grid"
                          ],
                          "type": "string",
                          "description": "Type of filter.",
                          "default": "checkbox"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array",
                                "items": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            ]
                          },
                          "description": "Selectable values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for values"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "title": "HierarchicalValuesFilterMeta",
                      "required": [
                        "values"
                      ],
                      "type": "object",
                      "properties": {
                        "group_title": {
                          "title": "Group Title",
                          "type": "string",
                          "description": "Title of the group, where a group consists of all the filters that share an ID."
                        },
                        "group_expanded": {
                          "title": "Group Expanded",
                          "type": "boolean",
                          "description": "Whether the filter group should be expanded by default or not."
                        },
                        "type": {
                          "title": "Type",
                          "enum": [
                            "checkbox-hierarchical"
                          ],
                          "type": "string",
                          "default": "checkbox-hierarchical"
                        },
                        "values": {
                          "title": "Values",
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "description": "Selectable hierarchical values"
                        },
                        "counts": {
                          "title": "Counts",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Counts for values"
                        },
                        "names": {
                          "title": "Names",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Names for hierarchical values"
                        }
                      },
                      "additionalProperties": false
                    }
                  ],
                  "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                  "bq_exclude": true
                },
                "id": {
                  "title": "Id",
                  "type": "string",
                  "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                  "bq_exclude": true
                }
              },
              "additionalProperties": false
            },
            "description": "Available filters that can be used for filtering in the subsequent request.",
            "bq_exclude": true
          },
          "search_request_id": {
            "title": "Search Request Id",
            "type": "string",
            "bq_type": "STRING"
          },
          "cursor": {
            "title": "Cursor",
            "maxLength": 500,
            "type": "string",
            "description": "Cursor that can be used in the next request to get subsequent results. If this is not set, there are no more results.",
            "bq_type": "STRING"
          }
        },
        "additionalProperties": false
      },
      "SearchSuggestionsResponse": {
        "title": "SearchSuggestionsResponse",
        "required": [
          "suggestions_request_id",
          "suggestions"
        ],
        "type": "object",
        "properties": {
          "suggestions_request_id": {
            "title": "Suggestions Request Id",
            "type": "string",
            "bq_type": "STRING"
          },
          "suggestions": {
            "title": "Suggestions",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "title": "QuerySuggestion",
                  "required": [
                    "title",
                    "suggestions_result_id"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Type",
                      "enum": [
                        "query"
                      ],
                      "type": "string",
                      "default": "query",
                      "bq_type": "STRING"
                    },
                    "title": {
                      "title": "Title",
                      "type": "string",
                      "description": "Title for suggestion.",
                      "bq_type": "STRING"
                    },
                    "suggestions_result_id": {
                      "title": "Suggestions Result Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "title": "CategorySuggestion",
                  "required": [
                    "category_id",
                    "title",
                    "page_url",
                    "filter",
                    "suggestions_result_id"
                  ],
                  "type": "object",
                  "properties": {
                    "category_id": {
                      "title": "Category Id",
                      "type": "string",
                      "description": "Unique identifier of the category."
                    },
                    "title": {
                      "title": "Title",
                      "type": "string",
                      "description": "The title of the category"
                    },
                    "page_url": {
                      "title": "Page Url",
                      "maxLength": 2083,
                      "minLength": 1,
                      "type": "string",
                      "description": "The full URL to the category page",
                      "format": "uri"
                    },
                    "query_id": {
                      "title": "Query Id",
                      "type": "string",
                      "description": "Optionally a unique query ID for the category"
                    },
                    "uri": {
                      "title": "Uri",
                      "type": "string",
                      "description": "Optionally a unique URI for the category, for example men/shoes"
                    },
                    "category_type": {
                      "allOf": [
                        {
                          "title": "ECategoryType",
                          "enum": [
                            "TAG",
                            "CATEGORY",
                            "TENANT_CATEGORY",
                            "TENANT_SECONDARY_CATEGORY",
                            "CAMPAIGN"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "The type of category, for example CAMPAIGN, TAG, or CATEGORY",
                      "default": "CATEGORY"
                    },
                    "type": {
                      "title": "Type",
                      "enum": [
                        "category"
                      ],
                      "type": "string",
                      "description": "type",
                      "default": "category",
                      "bq_type": "STRING"
                    },
                    "filter": {
                      "title": "Filter",
                      "allOf": [
                        {
                          "title": "SearchFilter",
                          "required": [
                            "field",
                            "op"
                          ],
                          "type": "object",
                          "properties": {
                            "field": {
                              "title": "Field",
                              "type": "string",
                              "description": "The field to filter by.",
                              "bq_type": "STRING"
                            },
                            "op": {
                              "title": "Op",
                              "enum": [
                                "eq",
                                "neq",
                                "in",
                                "nin",
                                "leq",
                                "geq",
                                "inrange"
                              ],
                              "type": "string",
                              "description": "The operation used for filtering. The filtering should be read as `field op data`, for example `brand in [\\\"Nike\\\", \\\"Adidas\\\"]`.",
                              "bq_type": "STRING"
                            },
                            "data": {
                              "title": "Data",
                              "anyOf": [
                                {
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                {
                                  "maxItems": 2,
                                  "minItems": 2,
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "number"
                                          }
                                        ]
                                      },
                                      {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "description": "Data for the filter.",
                              "bq_type": "STRING"
                            },
                            "meta": {
                              "title": "Meta",
                              "anyOf": [
                                {
                                  "title": "RangeFilterMeta",
                                  "required": [
                                    "min",
                                    "max"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "group_title": {
                                      "title": "Group Title",
                                      "type": "string",
                                      "description": "Title of the group, where a group consists of all the filters that share an ID."
                                    },
                                    "group_expanded": {
                                      "title": "Group Expanded",
                                      "type": "boolean",
                                      "description": "Whether the filter group should be expanded by default or not."
                                    },
                                    "type": {
                                      "title": "Type",
                                      "enum": [
                                        "range"
                                      ],
                                      "type": "string",
                                      "default": "range"
                                    },
                                    "min": {
                                      "title": "Min",
                                      "type": "number",
                                      "description": "The minimum value that can be selected in the range."
                                    },
                                    "max": {
                                      "title": "Max",
                                      "type": "number",
                                      "description": "The maximum value that can be selected in the range."
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "type": "string",
                                      "description": "The unit of the range values."
                                    },
                                    "currency": {
                                      "title": "Currency",
                                      "type": "string",
                                      "description": "The currency of the range values."
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "title": "ValuesFilterMeta",
                                  "required": [
                                    "values"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "group_title": {
                                      "title": "Group Title",
                                      "type": "string",
                                      "description": "Title of the group, where a group consists of all the filters that share an ID."
                                    },
                                    "group_expanded": {
                                      "title": "Group Expanded",
                                      "type": "boolean",
                                      "description": "Whether the filter group should be expanded by default or not."
                                    },
                                    "type": {
                                      "title": "Type",
                                      "enum": [
                                        "radio",
                                        "checkbox",
                                        "checkbox-grid"
                                      ],
                                      "type": "string",
                                      "description": "Type of filter.",
                                      "default": "checkbox"
                                    },
                                    "values": {
                                      "title": "Values",
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "enum": [
                                              "true",
                                              "false"
                                            ],
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "integer"
                                              }
                                            ]
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "integer"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "description": "Selectable values"
                                    },
                                    "counts": {
                                      "title": "Counts",
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "description": "Counts for values"
                                    },
                                    "names": {
                                      "title": "Names",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Names for values"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "title": "HierarchicalValuesFilterMeta",
                                  "required": [
                                    "values"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "group_title": {
                                      "title": "Group Title",
                                      "type": "string",
                                      "description": "Title of the group, where a group consists of all the filters that share an ID."
                                    },
                                    "group_expanded": {
                                      "title": "Group Expanded",
                                      "type": "boolean",
                                      "description": "Whether the filter group should be expanded by default or not."
                                    },
                                    "type": {
                                      "title": "Type",
                                      "enum": [
                                        "checkbox-hierarchical"
                                      ],
                                      "type": "string",
                                      "default": "checkbox-hierarchical"
                                    },
                                    "values": {
                                      "title": "Values",
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "enum": [
                                                "true",
                                                "false"
                                              ],
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        }
                                      },
                                      "description": "Selectable hierarchical values"
                                    },
                                    "counts": {
                                      "title": "Counts",
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "description": "Counts for values"
                                    },
                                    "names": {
                                      "title": "Names",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Names for hierarchical values"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ],
                              "description": "Metadata about the filter that can be used for rendering. For example, this could contain the possible values to filter by and their counts in the results.",
                              "bq_exclude": true
                            },
                            "id": {
                              "title": "Id",
                              "type": "string",
                              "description": "ID of the filter. If multiple filters share the same ID, they should be grouped together in the UI.",
                              "bq_exclude": true
                            }
                          },
                          "additionalProperties": false
                        }
                      ],
                      "bq_exclude": true
                    },
                    "suggestions_result_id": {
                      "title": "Suggestions Result Id",
                      "type": "string",
                      "bq_type": "STRING"
                    }
                  }
                }
              ]
            },
            "description": "List of suggestions for search queries that should be shown to the user while they are typing.",
            "bq_type": "JSON_DUMPS"
          }
        },
        "additionalProperties": false
      },
      "SortMeta": {
        "title": "SortMeta",
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "title": "SortingOrder",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string",
              "description": "An enumeration."
            },
            "description": "Selectable values"
          },
          "names": {
            "title": "Names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names for orders"
          }
        },
        "additionalProperties": false
      },
      "SortModel": {
        "title": "SortModel",
        "required": [
          "field",
          "order"
        ],
        "type": "object",
        "properties": {
          "field": {
            "title": "Field",
            "type": "string",
            "description": "The field to sort by.",
            "bq_type": "STRING"
          },
          "order": {
            "allOf": [
              {
                "title": "SortingOrder",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string",
                "description": "An enumeration."
              }
            ],
            "description": "The order to sort by.",
            "bq_type": "STRING"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "title": "SortMeta",
                "required": [
                  "title"
                ],
                "type": "object",
                "properties": {
                  "title": {
                    "title": "Title",
                    "type": "string"
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "title": "SortingOrder",
                      "enum": [
                        "asc",
                        "desc"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "description": "Selectable values"
                  },
                  "names": {
                    "title": "Names",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Names for orders"
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Metadata about the sort that can be used for rendering. ",
            "bq_exclude": true
          }
        },
        "additionalProperties": false
      },
      "SortingOrder": {
        "title": "SortingOrder",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "TrackV2Request": {
        "title": "TrackV2Request",
        "required": [
          "tenant",
          "market",
          "events"
        ],
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "minLength": 1,
            "type": "string",
            "description": "Identifier associated with the API integration"
          },
          "market": {
            "title": "Market",
            "minLength": 1,
            "type": "string",
            "description": "Market identifier"
          },
          "events": {
            "title": "Events",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "title": "UserTransactionMappingEvent",
                  "required": [
                    "transaction_id"
                  ],
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "title": "User Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "User Id. Persistent between devices, typically on a logged in user.",
                      "bq_type": "STRING"
                    },
                    "session_id": {
                      "title": "Session Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                      "bq_type": "STRING"
                    },
                    "dsid": {
                      "title": "Dsid",
                      "minLength": 1,
                      "type": "string",
                      "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                      "bq_type": "STRING"
                    },
                    "transaction_id": {
                      "title": "Transaction Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "Unique identifier for the transaction.",
                      "bq_type": "STRING"
                    },
                    "event_type": {
                      "title": "Event Type",
                      "enum": [
                        "transaction_mapping"
                      ],
                      "type": "string",
                      "description": "The type identifier for this event: transaction_mapping.",
                      "bq_exclude": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "title": "PurchaseEvent",
                  "required": [
                    "transaction_id",
                    "currency",
                    "products"
                  ],
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "title": "User Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "User Id. Persistent between devices, typically on a logged in user.",
                      "bq_type": "STRING"
                    },
                    "session_id": {
                      "title": "Session Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                      "bq_type": "STRING"
                    },
                    "dsid": {
                      "title": "Dsid",
                      "minLength": 1,
                      "type": "string",
                      "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                      "bq_type": "STRING"
                    },
                    "transaction_id": {
                      "title": "Transaction Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "Unique identifier for the transaction.",
                      "bq_type": "STRING"
                    },
                    "event_type": {
                      "title": "Event Type",
                      "enum": [
                        "purchase"
                      ],
                      "type": "string",
                      "description": "The type identifier for this event: purchase.",
                      "bq_exclude": true
                    },
                    "currency": {
                      "title": "Currency",
                      "pattern": "^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$",
                      "type": "string",
                      "description": "Currency the purchase was paid in",
                      "bq_type": "STRING"
                    },
                    "products": {
                      "title": "Products",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "title": "PurchasedProduct",
                        "required": [
                          "sku",
                          "price",
                          "quantity"
                        ],
                        "type": "object",
                        "properties": {
                          "sku": {
                            "title": "Sku",
                            "minLength": 1,
                            "type": "string",
                            "description": "Stock keeping unit, a distinct item for sale. If you are using Google Analytics, it should be the same id used for products there.",
                            "bq_type": "STRING"
                          },
                          "price": {
                            "title": "Price",
                            "minimum": 0,
                            "type": "number",
                            "description": "Price per unit. If there are discounts because of quantity, the unit price should be adjusted accordingly.",
                            "bq_type": "NUMERIC"
                          },
                          "quantity": {
                            "title": "Quantity",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The number of times the product was purchased.",
                            "bq_type": "INTEGER"
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "All the products purchased in this transaction",
                      "bq_type": ""
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "title": "ProductUnavailableEvent",
                  "required": [
                    "event_type",
                    "product_id",
                    "unavailability_type"
                  ],
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "title": "User Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "User Id. Persistent between devices, typically on a logged in user.",
                      "bq_type": "STRING"
                    },
                    "session_id": {
                      "title": "Session Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
                      "bq_type": "STRING"
                    },
                    "dsid": {
                      "title": "Dsid",
                      "minLength": 1,
                      "type": "string",
                      "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
                      "bq_type": "STRING"
                    },
                    "event_type": {
                      "title": "Event Type",
                      "enum": [
                        "product_unavailable"
                      ],
                      "type": "string",
                      "description": "The type identifier for this event: product_unavailable.",
                      "bq_exclude": true
                    },
                    "product_id": {
                      "title": "Product Id",
                      "minLength": 1,
                      "type": "string",
                      "description": "Main product identifier",
                      "bq_type": "STRING"
                    },
                    "unavailability_type": {
                      "allOf": [
                        {
                          "title": "EUnavailabilityType",
                          "enum": [
                            "out_of_stock",
                            "missing"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "Reason the product isn't available for purchase",
                      "bq_type": "STRING"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "UserTransactionMappingEvent": {
        "title": "UserTransactionMappingEvent",
        "required": [
          "transaction_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "minLength": 1,
            "type": "string",
            "description": "User Id. Persistent between devices, typically on a logged in user.",
            "bq_type": "STRING"
          },
          "session_id": {
            "title": "Session Id",
            "minLength": 1,
            "type": "string",
            "description": "Session Id. Unique to a browser/app and stored locally, e.g. cookie or localStorage.",
            "bq_type": "STRING"
          },
          "dsid": {
            "title": "Dsid",
            "minLength": 1,
            "type": "string",
            "description": "Populated for integrations performed by Depict.ai only. Depict.ai Session Id.",
            "bq_type": "STRING"
          },
          "transaction_id": {
            "title": "Transaction Id",
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the transaction.",
            "bq_type": "STRING"
          },
          "event_type": {
            "title": "Event Type",
            "enum": [
              "transaction_mapping"
            ],
            "type": "string",
            "description": "The type identifier for this event: transaction_mapping.",
            "bq_exclude": true
          }
        },
        "additionalProperties": false
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "ValuesFilterMeta": {
        "title": "ValuesFilterMeta",
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "group_title": {
            "title": "Group Title",
            "type": "string",
            "description": "Title of the group, where a group consists of all the filters that share an ID."
          },
          "group_expanded": {
            "title": "Group Expanded",
            "type": "boolean",
            "description": "Whether the filter group should be expanded by default or not."
          },
          "type": {
            "title": "Type",
            "enum": [
              "radio",
              "checkbox",
              "checkbox-grid"
            ],
            "type": "string",
            "description": "Type of filter.",
            "default": "checkbox"
          },
          "values": {
            "title": "Values",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array",
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                {
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array",
                  "items": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                },
                {
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array",
                  "items": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                {
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array",
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                }
              ]
            },
            "description": "Selectable values"
          },
          "counts": {
            "title": "Counts",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Counts for values"
          },
          "names": {
            "title": "Names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names for values"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "APIKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "api_key"
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      },
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "X-API-KEY"
      }
    }
  }
}